{
	"info": {
		"_postman_id": "8db5a778-cb9a-41c7-b6b5-b080978c42e7",
		"name": "Lab 03 - Challenge",
		"description": "## Collection Notes:\n\nCONGRATS! You've made it to the challenge section. This area is intended for attendees to solve and build solo/alone within Postman. Please try to remember to create the calls in a manner in which you piggyback IDs/data from prior calls. This will help you to achieve automation and run the collection (or subfolder) with Postman Runner\n\n## Your Challenge:\n\nYou need to bring in some new Surveys (or CSAT) data within Platform in order to enrich customer details. The data has been placed into an s3 bucket (details forthcoming) and will land on a daily basis.\n\n## Survey Data:\n\nHere is a sample JSON record to serve as an example of what data will be brought into Platform\n\n``` json\n{\n  \"_id\": \"f60ac4af-61f3-4a5a-b3a8-e9d243d283cd\",\n  \"_devbc\": {\n    \"csatData\": {\n      \"surveyDate\": \"2022-03-03T19:40:33Z\",\n      \"surveyId\": \"b5087729-a4a9-47e5-a34a-b1838e9b7e62\",\n      \"surveyType\": \"in-store\",\n      \"ratePlan\": 3,\n      \"rateCustomerService\": 9,\n      \"rateProducts\": 6,\n      \"rateSpeed\": 3\n    },\n    \"idDetails\": {\n      \"email\": \"jethington0@etsy.com\",\n      \"crmId\": \"8497125872\"\n    }\n  }\n}\n\n```\n\n## Survey Data Columns/Fields:\n\n| **JSON Field** | **Notes** | **Data Type** |\n| --- | --- | --- |\n| `csatData` | object containing values/attributes collected in the survey | Object |\n| `surveyDate` | when the survey was conducted (DATE) | DATE |\n| `surveyId` | unique ID of the survey -- could be used in future lookups (another lab in another day) (STRING | STRING |\n| `surveyType` | where the | STRING |\n| `ratePlan` | rating (1-10) on Plan Satisfaction | INTEGER |\n| `rateCustomerService` | rating (1-10) on Customer Service | INTEGER |\n| `rateProducts` | rating (1-10) on Product Offering | INTEGER |\n| `rateSpeed` | rating (1-10) on Service Speed | INTEGER |\n| `idDetails.email` | customer email address (NOTE: this field is sometimes not always populated) | STRING |\n| `idDetails.crmId` | unique customer ID (always populated) | STRING |\n\n## Other Data Specifics:\n\n| **Aspect** | **Value** |\n| --- | --- |\n| s3 Location | `summit2023lab/csat_data/xdm/` |\n| File format name | `2023_03_01_csat_data.json` |\n| Mockaroo Location (Public URL) | [https://mockaroo.com/813545e0](https://mockaroo.com/813545e0) |\n\n## Some Help:\n\n- Please consider copying prior calls (in Lab 01 and 02) as you may need to re-use those components\n- Please read the notes about the certain fields\n- Consider copying some code from Lab 2 - 2.1 - Step 1 (it's got some good stuff there)\n- If you need to restart creating objects/items (while in the middle of the challenge), please consider to reset/delete items with the -- Reset Challenge -- scripts\n- The areas with ???? = need to be fixed/changed in the lab\n- Please consider to NOT change the call names within Postman -- there's some conditional logic that's used to control whether or not schema/dataset gets promoted to Profile\n- Preflight Step - set this to \"yes\" if you wish to promote items to Profile. By default, the \"no\" setting will allow for Postman Runner to \"skip\" promotion to Profile\n- Note: schema based items (custom data types, field groups, schemas) cannot be deleted once promoted to Profile (see above comment).\n    \n\n## Labeling:\n\n| Assumed Naming Conventions | Value |\n| --- | --- |\n| Field Group - CSAT Responses | `{{lab_number}}: CSAT Responses` |\n| Field Group - Customer IDs | `{{lab_number}}: Customer Identities` |\n| Schema (CSAT) | `{{lab_number}}: CSAT Data` |\n| Dataset (CSAT) | `{{lab_number}}: CSAT Data` |\n| Flow (CSAT) | `{{lab_number}}: Dataflow for CSAT Data via AWS S3 - {{AWS_YEAR}}` |\n| Account (CSAT) | `{{lab_number}}: AWS S3 Storage Account - Summit (CSAT)` |\n\n## Extra Credit:\n\nAlready done? Please take a look at some common advanced example of operations within Platform\n\n## Collection Calls:\n\n<img src=\"https://content.pstmn.io/900fe28b-8e0f-4fb9-94f7-cc641acfde83/aW1hZ2UucG5n\" width=\"1045\" height=\"324\">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10097106"
	},
	"item": [
		{
			"name": "3.1 - Adding CSAT data into Platform",
			"item": [
				{
					"name": "0 - Preflight Check",
					"item": [
						{
							"name": "Step 1 - Preflight Check (????)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/",
											"",
											"var enableForProfile = \"no\";",
											"",
											"///// enableForProfile - variable inputs",
											"//",
											"// no  = skips promotion to Profile for (1) Schema and (2) Dataset",
											"// yes = attempts promotion to Profile for (1) Schema and (2) Dataset",
											"",
											"postman.setEnvironmentVariable(\"ENABLE_FOR_PROFILE\",                            enableForProfile.toLowerCase);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "x-user-token",
										"value": "{{x-user-token}}",
										"description": "The access token for the current user. If present, this token is instead of the token in the Authorization header to lookup sandboxes.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/sandbox-management/sandboxes/:sandboxName",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"sandbox-management",
										"sandboxes",
										":sandboxName"
									],
									"variable": [
										{
											"key": "sandboxName",
											"value": "{{SANDBOX_NAME}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "1 - Identity Namespaces",
					"item": [
						{
							"name": "Step 1 - Create Custom Namespace (????)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{...}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/core/idnamespace/identities",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"core",
										"idnamespace",
										"identities"
									]
								},
								"description": "## Call Objective:\n\n- The BODY is the design of a new namespace\n- POST [https://platform.adobe.io/data/core/idnamespace/identities](https://platform.adobe.io/data/core/idnamespace/identities)\n    \n\n## Lab Task:\n\n- Make sure 201 response occurs\n- Make note of the `code` used, this is needed for delcaring identitiy descriptors in the schema\n- Notice that `idType` is critical for backend stitching (UIS graph)\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/ef758da8-9ff8-4901-9367-d4f45a726043/aW1hZ2UucG5n\" alt=\"\" height=\"342\" width=\"715\">\n\n## Body Analysis:\n\n| **idType** | **comments** | **Unified Identity Service (UIS) Stitching** |\n| --- | --- | --- |\n| `CROSS_DEVICE` | Cross-device IDs identify an individual and usually tie other IDs together | YES |\n| `Email` | Email addresses are often associated with a single person and therefore can be used to identify that person across different channels | YES |\n| `Phone` | Phone numbers are often associated with a single person and therefore can be used to identify that person across different channels | YES |\n| `COOKIE` | Cookie IDs identify web browsers | YES |\n| `Device` | Device IDs identify hardware devices | YES |\n| `Non-people` | Non-people IDs are used for storing identifiers that require namespaces _**but are not connected to a person cluster**_. For example, a product SKU, data related to products, organizations, or stores. | NO -- but it does match/connect keys together (very much like SAINT or matchtables) |\n\n## Key Takeaways:\n\n- This creates a new field group (mixin) that can be used in a schema\n    \n\n## Notice:\n\n- Custom namespaces created in `prod` are _**NOT allowed to be deleted/reset**_\n- Custom namespaces created in `sandboxes` (not `prod`) can be deleted only upon sandbox reset\n- Attempt to re-create an already submitted namespace will result in a 409 response (nothing changes/breaks in the backend)\n    \n\n## API Library Location:\n\n- Identity Service\n    - Identity Namespaces\n        - Create new identity namespace\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/identity/namespaces.html](https://experienceleague.adobe.com/docs/experience-platform/identity/namespaces.html)\n- [https://experienceleague.adobe.com/docs/experience-platform/identity/api/create-custom-namespace.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/identity/api/create-custom-namespace.html?lang=en)\n- [https://developer.adobe.com/experience-platform-apis/references/identity-service/#tag/Identity-Namespace/operation/retrieveIdentityNamespace](https://developer.adobe.com/experience-platform-apis/references/identity-service/#tag/Identity-Namespace/operation/retrieveIdentityNamespace)"
							},
							"response": []
						},
						{
							"name": "Step 2 - Create Custom Namespace (???? other ID - extra credit)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"surveyID\",\r\n    \"code\": \"surveyID\",\r\n    \"idType\": \"NON_PEOPLE\",\r\n    \"description\": \"Survey ID\"\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/core/idnamespace/identities",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"core",
										"idnamespace",
										"identities"
									]
								},
								"description": "## Call Objective:\n\n- The BODY is the design of a new namespace\n- POST [https://platform.adobe.io/data/core/idnamespace/identities](https://platform.adobe.io/data/core/idnamespace/identities)\n    \n\n## Lab Task:\n\n- Make sure 201 response occurs\n- Make note of the `code` used, this is needed for delcaring identitiy descriptors in the schema\n- Notice that `idType` is critical for backend stitching (UIS graph)\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/ef758da8-9ff8-4901-9367-d4f45a726043/aW1hZ2UucG5n\" alt=\"\" height=\"342\" width=\"715\">\n\n## Body Analysis:\n\n| **idType** | **comments** | **Unified Identity Service (UIS) Stitching** |\n| --- | --- | --- |\n| `CROSS_DEVICE` | Cross-device IDs identify an individual and usually tie other IDs together | YES |\n| `Email` | Email addresses are often associated with a single person and therefore can be used to identify that person across different channels | YES |\n| `Phone` | Phone numbers are often associated with a single person and therefore can be used to identify that person across different channels | YES |\n| `COOKIE` | Cookie IDs identify web browsers | YES |\n| `Device` | Device IDs identify hardware devices | YES |\n| `Non-people` | Non-people IDs are used for storing identifiers that require namespaces _**but are not connected to a person cluster**_. For example, a product SKU, data related to products, organizations, or stores. | NO -- but it does match/connect keys together (very much like SAINT or matchtables) |\n\n## Key Takeaways:\n\n- This creates a new field group (mixin) that can be used in a schema\n    \n\n## Notice:\n\n- Custom namespaces created in `prod` are _**NOT allowed to be deleted/reset**_\n- Custom namespaces created in `sandboxes` (not `prod`) can be deleted only upon sandbox reset\n- Attempt to re-create an already submitted namespace will result in a 409 response (nothing changes/breaks in the backend)\n    \n\n## API Library Location:\n\n- Identity Service\n    - Identity Namespaces\n        - Create new identity namespace\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/identity/namespaces.html](https://experienceleague.adobe.com/docs/experience-platform/identity/namespaces.html)\n- [https://experienceleague.adobe.com/docs/experience-platform/identity/api/create-custom-namespace.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/identity/api/create-custom-namespace.html?lang=en)\n- [https://developer.adobe.com/experience-platform-apis/references/identity-service/#tag/Identity-Namespace/operation/retrieveIdentityNamespace](https://developer.adobe.com/experience-platform-apis/references/identity-service/#tag/Identity-Namespace/operation/retrieveIdentityNamespace)"
							},
							"response": []
						}
					]
				},
				{
					"name": "2 - Field Groups",
					"item": [
						{
							"name": "Step 1 - Create Field Group (????)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"FG_CUSTOM_CUSTOMER_IDS_ID\", data[\"$id\"]);\r",
											"postman.setEnvironmentVariable(\"FG_CUSTOM_CUSTOMER_IDS_META_ALTID\", data[\"meta:altId\"]);\r",
											"\r",
											"// pm.collectionVariables.set(\"field_group_custom_customer_ids_id\", data[\"$id\"]);\r",
											"// pm.collectionVariables.set(\"field_group_custom_customer_ids_meta_altid\", data[\"meta:altid\"]);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{...}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/mixins/",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"mixins",
										""
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant"
										}
									]
								},
								"description": "## Call Objective:\n\n- Creates a custom field group with the schema registry\n- Utilize the POST method [https://platform.adobe.io/data/foundation/schemaregistry/tenant/mixins/](https://platform.adobe.io/data/foundation/schemaregistry/tenant/mixins/Body)\n    \n\nStartFragment\n\n## Lab Task:\n\n- Goto the \"Tests\" tab\n- Capture the `$id` and `meta:altId` values of this Field Group (FG)\n    \n\n## Body Analysis\n\n| **Required Values** | **Comments** |\n| --- | --- |\n| `title` | The name of the field group you wish to create within the schema registry. Note the name MUST BE UNIQUE. |\n| `description` | A short description about the purpose of the field group |\n| `type` | Always an object |\n| `meta:intendedToExtend` | Defines what classes the field group can be used with. Classes are always referenced by their `$id` value |\n| `allOf` | A list of resources whose properties are to be inheritied by the new class |\n| `definitions...` | This contains the fields that make up the field group. Note the use of the `$ref` lists the path to the data type we created |\n| `{{TENANT_ID}}` | This is your tenant name (i.e. unique name) that is created during the provisioning process. This ensures that any customizations made are unique to only your IMS Org |\n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/97da647e-169d-45f0-aa15-a986d52307cb/aW1hZ2UucG5n\" width=\"1263\" height=\"391\">\n\n## Response Analysis:\n\n| **variables** | **comments** |\n| --- | --- |\n| `$id` | JSON Schema standard identifier in the form of a URI used for all XDM resources |\n| `meta:altId` | REST friendly version of the $id expressed in dot notation |\n| `definitions...` | This contains the fields that make up the field group. Note the use of the `$ref` lists the path to the data type we created |\n| `meta:intendedToExtend` | Defines where this field group is allowed |\n| `allOf` | A list of resources whose properties are to be inherited by the new class. |\n\n## Key Takeaways:\n\n- This creates a new field group (mixin) that can be used in a schema"
							},
							"response": []
						}
					]
				},
				{
					"name": "3 - Schema, Descriptors and Dataset",
					"item": [
						{
							"name": "Step 1 - Create a new schema - (????)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{lab_number}}: CSAT Data\",\r\n    \"description\": \"{{lab_number}}: CSAT Data\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/identitymap\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile-person-details\"\r\n        },\r\n        {\r\n            \"????\"\r\n        },\r\n        {\r\n            \"????\"\r\n        }\r\n    ]\r\n}\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas/",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"schemas",
										""
									]
								},
								"description": "## Call Objective:\n\n- The BODY is the design of the schema\n- POST [https://platform.adobe.io/data/foundation/schemaregistry/tenant/mixins/](https://platform.adobe.io/data/foundation/schemaregistry/tenant/mixins/)\n    \n\n## Lab Task:\n\n- Please insert/paste the correct `$ref` values within the BODY payload\n    \n\n## Body Example:\n\n<img src=\"https://content.pstmn.io/ce6fe0d5-c820-4c83-b042-1ceb25a9f599/aW1hZ2UucG5n\" width=\"1058\" height=\"624\">\n\n## Body Analysis\n\n| **variables** | **comments** |\n| --- | --- |\n| `title` | friendly name that shows in the UI (REQUIRED) |\n| `description` | gives more context to the schema (OPTIONAL) |\n| `allOf` | this is an array with all the components (each `$ref` value) that build out the schema |\n| `$ref` | there's eseentially 3 different types of values that are used here: (1) declaring the class (2) OOTB field groups and (3) Custom field groups |\n\n## Schema Components:\n\n<img src=\"https://content.pstmn.io/b5b48c09-7375-4966-b982-de31447a5d2f/aW1hZ2UucG5n\" width=\"1390\" height=\"789\">\n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/f6930dac-154a-4b43-aff3-76967d137a0e/aW1hZ2UucG5n\" width=\"1574\" height=\"431\">\n\n## Response Analysis:\n\n| **variables** | **comments** |\n| --- | --- |\n| `$id` | primary ID needed in schema creation |\n| `meta:altId` | sometimes used in other places (_usually_ not as useful as `$id` ) |\n\n## Key Takeaways:\n\n- This creates a new field group (mixin) that can be used in a schema\n    \n\n## API Library Location:\n\n- Schema Registry API\n    - Schemas\n        - Create a custom schema"
							},
							"response": []
						},
						{
							"name": "Step 2 - CSAT Create descriptor - (???? primary ID)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{...}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/descriptors",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"descriptors"
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant"
										}
									]
								},
								"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
							},
							"response": []
						},
						{
							"name": "Step 3 - CSAT Create descriptor - (???? secondary ID)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{...}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/descriptors",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"descriptors"
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant"
										}
									]
								},
								"description": "<p>Required fields for defining a descriptor vary based on the @type of the descriptor.</p>"
							},
							"response": []
						},
						{
							"name": "Step - Check Schema Promotion",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/",
											"",
											"if (pm.environment.get(\"ENABLE_FOR_PROFILE\") == \"yes\") {",
											"    postman.setNextRequest('Step - CSAT promote schema to profile');",
											"}",
											"else {",
											"    postman.setNextRequest('Step - CSAT Create a new dataset (????)');",
											"};",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "x-user-token",
										"value": "{{x-user-token}}",
										"description": "The access token for the current user. If present, this token is instead of the token in the Authorization header to lookup sandboxes.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/sandbox-management/sandboxes/:sandboxName",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"sandbox-management",
										"sandboxes",
										":sandboxName"
									],
									"variable": [
										{
											"key": "sandboxName",
											"value": "{{SANDBOX_NAME}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step - CSAT promote schema to profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"remove\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/schemas/:SCHEMA_ID_TO_PATCH",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"schemas",
										":SCHEMA_ID_TO_PATCH"
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant"
										},
										{
											"key": "SCHEMA_ID_TO_PATCH",
											"value": "{{CSAT_SCHEMA_META_ALTID}}",
											"description": "{{insert-your-crm-altid-here}}"
										}
									]
								},
								"description": "<p>The Schema Registry supports all standard JSON Patch operations, including add, remove, and replace, to allow users to modify or update schemas they have defined.</p><br/><p>For more information on JSON Patch, including all available operations, read [the official JSON Patch documentation](http://jsonpatch.com).</p>"
							},
							"response": []
						},
						{
							"name": "Step - CSAT Create a new dataset (????)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "accept-encoding",
										"value": "{{accept-encoding}}",
										"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{...}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"catalog",
										"dataSets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step - Check Dataset Promotion",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/",
											"",
											"if (pm.environment.get(\"ENABLE_FOR_PROFILE\") == \"yes\") {",
											"    postman.setNextRequest('Step - CSAT promote dataset to profile');",
											"}",
											"else {",
											"    postman.setNextRequest('Step - CSAT Complete Dataset and Schema');",
											"};",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "x-user-token",
										"value": "{{x-user-token}}",
										"description": "The access token for the current user. If present, this token is instead of the token in the Authorization header to lookup sandboxes.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/sandbox-management/sandboxes/:sandboxName",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"sandbox-management",
										"sandboxes",
										":sandboxName"
									],
									"variable": [
										{
											"key": "sandboxName",
											"value": "{{SANDBOX_NAME}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step - CSAT promote dataset  to profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json",
										"description": "this needs to be: application/json-patch+json NOT: application/json || https://jira.corp.adobe.com/browse/PLATIR-14798"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "accept-encoding",
										"value": "{{accept-encoding}}",
										"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/tags/unifiedProfile\",\r\n        \"value\": [\r\n            \"enabled:true\"\r\n        ]\r\n    },\r\n     {\r\n        \"op\": \"add\",\r\n        \"path\": \"/tags/unifiedIdentity\",\r\n        \"value\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n]"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets/:DATASET_ID",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"catalog",
										"dataSets",
										":DATASET_ID"
									],
									"variable": [
										{
											"key": "DATASET_ID",
											"value": "{{CSAT_DATASET_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step - CSAT Complete Dataset and Schema",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "x-user-token",
										"value": "{{x-user-token}}",
										"description": "The access token for the current user. If present, this token is instead of the token in the Authorization header to lookup sandboxes.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/sandbox-management/sandboxes/:sandboxName",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"sandbox-management",
										"sandboxes",
										":sandboxName"
									],
									"variable": [
										{
											"key": "sandboxName",
											"value": "{{SANDBOX_NAME}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4 - Source + Dataflow (s3 for Survey)",
					"item": [
						{
							"name": "Source - s3",
							"item": [
								{
									"name": "Step 1 - View Current s3 Connections",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var elementCount = data.items.length;\r",
													"for (var counter = 0; counter < elementCount; counter++) {\r",
													"    if (data.items[counter][\"attributes\"][\"isSource\"] == true ) {\r",
													"        postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", data.items[counter][\"id\"]);\r",
													"        console.log(pm.environment.get(\"AWS_S3_SPEC_ID\"));\r",
													"    };\r",
													"};"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connectionSpecs?property=name==\"amazon-s3\"'",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connectionSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"amazon-s3\"'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 - Create s3 connection CSAT",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"if (pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") > 0){",
													"    var count_is = true;",
													"} else if (pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") === 0){",
													"    pm.environment.unset(\"REPEAT_ACCOUNT_COUNT\");",
													"    postman.setNextRequest(null);",
													"} else {",
													"    pm.environment.set(\"REPEAT_ACCOUNT_COUNT\", 5);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Check Status', () => {\r",
													"if (pm.response.code === 201) {\r",
													"    var data = JSON.parse(responseBody);\r",
													"    pm.environment.set(\"AWS_S3_CONNECTOR_CSAT_ID\", data[\"id\"]);\r",
													"    pm.environment.unset(\"REPEAT_ACCOUNT_COUNT\");\r",
													"} else {\r",
													"    if (pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") > 0) {\r",
													"        var newcount = pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") - 1\r",
													"        console.log(newcount);\r",
													"        pm.environment.set(\"REPEAT_ACCOUNT_COUNT\", newcount);\r",
													"        setTimeout(function () { postman.setNextRequest(\"Step 2 - Create s3 connection CSAT\") }, 45000);\r",
													"    }\r",
													"}});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{lab_number}}: AWS S3 Storage Account - Summit (CSAT)\",\r\n    \"description\": \"{{lab_number}}: AWS S3 Storage Account - Summit (CSAT)\",\r\n    \"auth\": {\r\n        \"specName\": \"Access Key\",\r\n        \"params\": {\r\n            \"s3AccessKey\": \"{{S3_ACCESS_KEY}}\",\r\n            \"s3SecretKey\": \"{{S3_SECRET_KEY}}\"\r\n        }\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{AWS_S3_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the credentials/account\n- POST [https://platform.adobe.io/data/foundation/flowservice/connections](https://platform.adobe.io/data/foundation/flowservice/connections)\n    \n\n## Lab Task:\n\n- Within your Collection variables, please add + save these IDs so Postman Runner uses them\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/f6930dac-154a-4b43-aff3-76967d137a0e/aW1hZ2UucG5n\" width=\"1574\" height=\"431\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `s3AccessKey` | s3 bucket Access Key |\n| `s3SecretKey` | s3 bucket Secret Key |\n| `connectionSpec.id` | This specifies which connection is being used (obtained from last step) |\n\n## Key Takeaways:\n\n- This creates a new connection\n- A single connection can control multiple dataflows (albeit from the same source)\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Connections\n        - Create a new connection\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 3 - Test the connectivity of an established connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"AWS_BASE_CONNECTOR_ID_SUCCESSFUL\", data[\"result\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connections/:CONNECTION_ID/test",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections",
												":CONNECTION_ID",
												"test"
											],
											"variable": [
												{
													"key": "CONNECTION_ID",
													"value": "{{AWS_S3_CONNECTOR_CSAT_ID}}"
												}
											]
										},
										"description": "## Call Objective:\n\n- Check if the last connection (that was created) is valid/working\n- This is not a requirement but good to have (in case the prior API call failed)\n- GET [https://platform.adobe.io/data/foundation/flowservice/connections/:CONNECTION_ID/test](https://platform.adobe.io/data/foundation/flowservice/connections/:CONNECTION_ID/test)\n    \n\n## Lab Task:\n\n- Confirm connection is working -- this is a status check really\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/f6930dac-154a-4b43-aff3-76967d137a0e/aW1hZ2UucG5n\" width=\"1574\" height=\"431\">\n\n## API Library Location:\n\n- Flow Service API\n    - Connections\n        - Test a connection's connectivity\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Landing - Cloud Storage into Platform",
							"item": [
								{
									"name": "Step 4 - Retrieve details of a flow spec for s3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"DATALAKE_CONNECTOR_SPEC_ID\", data.items[0][\"targetConnectionSpecIds\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flowSpecs?property=name==\"CRMToAEP\"",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flowSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"CRMToAEP\""
												}
											]
										},
										"description": "[https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/cloud-storage.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/cloud-storage.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 4 - Retrieve details of a flow spec for Datalake",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CLOUD_STOR_FLOWSPEC_ID\", data.items[0][\"id\"]);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flowSpecs?property=name==\"CloudStorageToAEP\"",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flowSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"CloudStorageToAEP\""
												}
											]
										},
										"description": "[https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/cloud-storage.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/cloud-storage.html?lang=en)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Connection - s3",
							"item": [
								{
									"name": "Step 5 - CRM S3 Create a new source connection (????)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"// getting the current year and month and casting it into my Environment file",
													"var moddate = -1;",
													"var d = new Date();",
													"var mm = (d.getMonth() + 1 + moddate).toString().padStart(2, \"0\");",
													"var yyyy = d.getFullYear();",
													"",
													"postman.setEnvironmentVariable(\"AWS_MONTH\", mm);",
													"postman.setEnvironmentVariable(\"AWS_YEAR\", yyyy);",
													"",
													"",
													"// setting the file location within the call itself",
													"postman.setEnvironmentVariable(\"SUMMIT_PATH_CSAT_DATA_FILE_PATH\",      \"/summit2023lab/csat_data/xdm/\");       // yes",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CSAT_DATA_SOURCE_CONN_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{lab_number}}: Source Connection for CSAT data - {{AWS_YEAR}}\",\r\n    \"baseConnectionId\": \"{{AWS_S3_CONNECTOR_CSAT_ID}}\",\r\n    \"description\": \"{{lab_number}}: Source Connection for CSAT data - {{AWS_YEAR}}\",\r\n    \"data\": {\r\n        \"format\": \"json\"\r\n    },\r\n    \"params\": {\r\n        \"path\": \"...\",\r\n        \"recursive\": \"true\"\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{AWS_S3_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the source location (and data aspects)\n- POST [https://platform.adobe.io/data/foundation/flowservice/sourceConnections](https://platform.adobe.io/data/foundation/flowservice/sourceConnections)\n    \n\n## Lab Task:\n\n- Within your Collection variables, please add + save these IDs so Postman Runner uses them\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/f6930dac-154a-4b43-aff3-76967d137a0e/aW1hZ2UucG5n\" width=\"1574\" height=\"431\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `baseConnectionId` | previous id from the source/account connection |\n| `data.format` | sepcifies the data formatting |\n| `params.path` | location of the data -- please note that in the API call you can use limited regex \"\\*\" pattern matching to collect more than a single file (UI does not support this) |\n| `params.recursive` | recursive look into the location |\n| `connectionSpec.id` | um,,, |\n\n## Key Takeaways:\n\n- This creates a new source information (for a dataflow)\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Source connections\n        - Create a new source connection\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 6 - CRM S3 Create a new target connection (????)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CSAT_DATA_TARGET_CONN_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{lab_number}}: Target Connection for CSAT data - {{AWS_YEAR}}\",\r\n    \"description\": \"{{lab_number}}: Target Connection for CRM data - {{AWS_YEAR}}\",\r\n    \"data\": {\r\n        \"format\": \"parquet_xdm\",\r\n        \"schema\": {\r\n            \"id\": \"{{CSAT_SCHEMA_ID}}\",\r\n            \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n        }\r\n    },\r\n    \"params\": {\r\n        \"dataSetId\": \"...\"\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{DATALAKE_CONNECTOR_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the target location (schema + dataset)\n- POST [https://platform.adobe.io/data/foundation/flowservice/targetConnections](https://platform.adobe.io/data/foundation/flowservice/targetConnections)\n    \n\n## Lab Task:\n\n- Within your Collection variables, please add + save these IDs so Postman Runner uses them\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/f6930dac-154a-4b43-aff3-76967d137a0e/aW1hZ2UucG5n\" width=\"1574\" height=\"431\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `data.format` | specifies the data formatting expected to land |\n| `data.schema.id` | schema ID (created prior) |\n| `params.dataSetId` | dataset ID (created prior) |\n| `connectionSpec.id` | datalake connector ID (from catalogue) -- ask Nipun about this (why it's this way???) |\n\n## Key Takeaways:\n\n- This creates a new source information (for a dataflow)\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Target connections\n        - Create a new target connection\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 7 - Create a new dataflow",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var ts = Math.round((new Date()).getTime() / 1000);",
													"pm.globals.set(\"ts\", ts);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CSAT_DATA_FLOW_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{lab_number}}: Dataflow for CSAT Data via AWS S3 - {{AWS_YEAR}}\",\r\n    \"description\": \"{{lab_number}}: Dataflow for CSAT Data via AWS S3 - {{AWS_YEAR}}\",\r\n    \"flowSpec\": {\r\n        \"id\": \"{{CLOUD_STOR_FLOWSPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{CSAT_DATA_SOURCE_CONN_ID}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{CSAT_DATA_TARGET_CONN_ID}}\"\r\n    ],\r\n    \"transformations\": [],\r\n    \"scheduleParams\": {\r\n        \"startTime\": \"{{ts}}\",\r\n        \"frequency\": \"minute\",\r\n        \"interval\": \"15\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the dataflow (source + target combination -- the executiion of the feed)\n- POST [https://platform.adobe.io/data/foundation/flowservice/flows](https://platform.adobe.io/data/foundation/flowservice/flows)\n    \n\n## Lab Task:\n\n- Within your Collection variables, please add + save these IDs so Postman Runner uses them\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/f6930dac-154a-4b43-aff3-76967d137a0e/aW1hZ2UucG5n\" width=\"1574\" height=\"431\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `flowSpec.id` | forgot where this thing lives |\n| `sourceConnectionIds` | source connection ID (created prior) |\n| `targetConnectionIds` | target connection ID (created prior) |\n| `transformations` | in this example, nothing is used since data is already in XDM-compliant JSON format. Within the extra credit section, we'll use Mapper (data prep) to transform data into the schema/dataset format |\n| `scheduleParams` | settings for how often data will be pulled (on poll). Please note that typically the \"smallest\" interval of time is 15 mins. `{{ts}}` is current UNIX TIME calculated. Ask Nipun (docs?) backfill also ad hoc as a value |\n\n## Key Takeaways:\n\n- This creates a new a new dataflow -- tying together all the prior steps\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Flows\n        - Create a flow\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								}
							]
						}
					],
					"description": "<img src=\"https://content.pstmn.io/5d8d7e35-973f-4390-8fa4-9660362a88da/aW1hZ2UucG5n\" alt=\"\" height=\"606\" width=\"1279\">"
				},
				{
					"name": "5 - Check Dataset Loading",
					"item": [
						{
							"name": "Retrieve a list of batches on Dataset",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									},
									{
										"key": "accept-encoding",
										"value": "{{accept-encoding}}",
										"description": "Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/catalog/batches?dataSet={{CSAT_DATASET_ID}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"catalog",
										"batches"
									],
									"query": [
										{
											"key": "status",
											"value": "{{status}}",
											"disabled": true
										},
										{
											"key": "recordCount",
											"value": "{{recordCount}}",
											"disabled": true
										},
										{
											"key": "failedRecordCount",
											"value": "{{failedRecordCount}}",
											"disabled": true
										},
										{
											"key": "size",
											"value": "{{size}}",
											"disabled": true
										},
										{
											"key": "started",
											"value": "{{started}}",
											"disabled": true
										},
										{
											"key": "completed",
											"value": "{{completed}}",
											"disabled": true
										},
										{
											"key": "startAfter",
											"value": "{{startAfter}}",
											"disabled": true
										},
										{
											"key": "startBefore",
											"value": "{{startBefore}}",
											"disabled": true
										},
										{
											"key": "endAfter",
											"value": "{{endAfter}}",
											"disabled": true
										},
										{
											"key": "endBefore",
											"value": "{{endBefore}}",
											"disabled": true
										},
										{
											"key": "batch",
											"value": "{{batch}}",
											"disabled": true
										},
										{
											"key": "externalId",
											"value": "{{externalId}}",
											"disabled": true
										},
										{
											"key": "connection",
											"value": "{{connection}}",
											"disabled": true
										},
										{
											"key": "connector",
											"value": "{{connector}}",
											"disabled": true
										},
										{
											"key": "dataSet",
											"value": "{{CSAT_DATASET_ID}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "-- Reset Challenge --",
			"item": [
				{
					"name": "Delete Schema (csat data)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas/:SCHEMA_ID",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"schemas",
								":SCHEMA_ID"
							],
							"variable": [
								{
									"key": "SCHEMA_ID",
									"value": "{{CSAT_SCHEMA_META_ALTID}}"
								}
							]
						},
						"description": "## NOTE:\n\nmight not work if schema has been promoted to profile"
					},
					"response": []
				},
				{
					"name": "Delete Custom Field Group (customer identities)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups/:FIELD_GROUP_ID",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups",
								":FIELD_GROUP_ID"
							],
							"variable": [
								{
									"key": "FIELD_GROUP_ID",
									"value": "{{FG_CUSTOM_CUSTOMER_IDS_META_ALTID}}"
								}
							]
						},
						"description": "## NOTE:\n\nmight not work if schema has been promoted to profile"
					},
					"response": []
				},
				{
					"name": "Delete Custom Field Group (csat responses)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups/:FIELD_GROUP_ID",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"schemaregistry",
								"tenant",
								"fieldgroups",
								":FIELD_GROUP_ID"
							],
							"variable": [
								{
									"key": "FIELD_GROUP_ID",
									"value": "{{FG_CUSTOM_CSAT_RESPONSES_META_ALTID}}"
								}
							]
						},
						"description": "## NOTE:\n\nmight not work if schema has been promoted to profile"
					},
					"response": []
				},
				{
					"name": "Delete a flow",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/flowservice/flows/:FLOW_ID",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"flowservice",
								"flows",
								":FLOW_ID"
							],
							"variable": [
								{
									"key": "FLOW_ID",
									"value": "{{CSAT_DATA_FLOW_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an existing connection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
								"type": "string"
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
								"type": "string"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/foundation/flowservice/connections/:CONNECTION_ID/",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"foundation",
								"flowservice",
								"connections",
								":CONNECTION_ID",
								""
							],
							"variable": [
								{
									"key": "CONNECTION_ID",
									"value": "{{AWS_S3_CONNECTOR_CSAT_ID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3.2 - Extra Credit",
			"item": [
				{
					"name": "1 - Capture an Existing Asset (example FG)",
					"item": [
						{
							"name": "Step 1 - Create a Custom Field Group (latest actions)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"FG_LATEST_ACTIONS_ID\", data[\"$id\"]);\r",
											"postman.setEnvironmentVariable(\"FG_LATEST_ACTIONS_META_ALTID\", data[\"meta:altId\"]);\r",
											"\r",
											"// pm.collectionVariables.set(\"field_group_latest_actions_id\", data[\"$id\"]);\r",
											"// pm.collectionVariables.set(\"field_group_latest_actions_meta_altid\", data[\"meta:altId\"]);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"Lab 03 EXTRA CREDIT: Latest Actions\",\r\n    \"description\": \"Lab 03 EXTRA CREDIT: Latest Actions\",\r\n    \"meta:intendedToExtend\": [\r\n        \"https://ns.adobe.com/xdm/context/profile\"\r\n    ],\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"#/definitions/customFields\"\r\n        }\r\n    ],\r\n    \"meta:containerId\": \"tenant\",\r\n    \"meta:invokeDate\": \"2023-02-15\",\r\n    \"definitions\": {\r\n        \"customFields\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"{{TENANT_ID}}\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                        \"latestActions\": {\r\n                            \"title\": \"Latest Actions\",\r\n                            \"description\": \"\",\r\n                            \"type\": \"object\",\r\n                            \"isRequired\": false,\r\n                            \"required\": [],\r\n                            \"properties\": {\r\n                                \"actionName\": {\r\n                                    \"title\": \"Action Name\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                },\r\n                                \"actionType\": {\r\n                                    \"title\": \"Action Type\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                },\r\n                                \"actionTimestamp\": {\r\n                                    \"title\": \"Action Timestamp\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"format\": \"date-time\",\r\n                                    \"meta:xdmType\": \"date-time\"\r\n                                },\r\n                                \"actionChannel\": {\r\n                                    \"title\": \"Action Channel\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                },\r\n                                \"actionTransactionAmount\": {\r\n                                    \"title\": \"Action Amount\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"number\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"number\"\r\n                                },\r\n                                \"actionProduct\": {\r\n                                    \"title\": \"Action Product\",\r\n                                    \"description\": \"\",\r\n                                    \"type\": \"string\",\r\n                                    \"required\": [],\r\n                                    \"meta:xdmType\": \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2 - List field groups Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var fg_name = \"Lab 03 EXTRA CREDIT: Latest Actions\";\r",
											"var new_fg  = fg_name.replace(/ /g,\"_\",);\r",
											"console.log(new_fg)\r",
											"var data    = JSON.parse(responseBody);\r",
											"var lenchil = data.results.length;\r",
											"var setlen  = lenchil;\r",
											"for (var counter = 0; counter < setlen; counter++) {\r",
											"    if (data.results[counter][\"title\"] == fg_name ) {\r",
											"        postman.setEnvironmentVariable(\"field_group_latest_actions_id\", data.results[counter][\"$id\"]);\r",
											"        postman.setEnvironmentVariable(new_fg, data.results[counter][\"$id\"]);\r",
											"        postman.setEnvironmentVariable(\"field_group_latest_actions_meta_altid\", data.results[counter][\"meta:altId\"]);\r",
											"        console.log(pm.environment.get(\"field_group_latest_actions_id\"));\r",
											"    };\r",
											"};"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.adobe.xed-id+json",
										"description": "The desired response format (application/vnd.adobe.xed-full+json).",
										"type": "string"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/fieldgroups?limit=100",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"fieldgroups"
									],
									"query": [
										{
											"key": "property",
											"value": "{{property}}",
											"disabled": true
										},
										{
											"key": "orderby",
											"value": "{{orderby}}",
											"disabled": true
										},
										{
											"key": "start",
											"value": "{{start}}",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "{{limit}}"
										}
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant",
											"description": "{{CONTAINER_ID}}"
										}
									]
								},
								"description": "Retrieve a list of field groups within the specified container."
							},
							"response": []
						},
						{
							"name": "Step 3 - Retrieve a field group (let's say someone built this in the UI)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data     = JSON.parse(responseBody);\r",
											"const newobj = Object.create({});\r",
											"newobj.definitions              = data.definitions\r",
											"newobj.title                    = data.title\r",
											"newobj.type                     = data.type\r",
											"newobj.description              = data.description\r",
											"newobj[\"meta:intendedToExtend\"] = data[\"meta:intendedToExtend\"]\r",
											"newobj[\"allOf\"]                 = data[\"allOf\"]\r",
											"\r",
											"postman.setEnvironmentVariable(\"FIELD_GROUP_LATEST_ACTIONS_PAYLOAD\", JSON.stringify(newobj));\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.adobe.xdm+json; version=1",
										"description": "The desired response format (application/vnd.adobe.xed-full+json).",
										"type": "string"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/fieldgroups/:FIELD_GROUP_ID",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"fieldgroups",
										":FIELD_GROUP_ID"
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant",
											"description": "{{CONTAINER_ID}}"
										},
										{
											"key": "FIELD_GROUP_ID",
											"value": "{{field_group_latest_actions_meta_altid}}",
											"description": "{{FIELD_GROUP_ID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 - Delete a custom field group Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups/:FIELD_GROUP_ID",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups",
										":FIELD_GROUP_ID"
									],
									"variable": [
										{
											"key": "FIELD_GROUP_ID",
											"value": "{{FG_LATEST_ACTIONS_META_ALTID}}",
											"description": "{{FIELD_GROUP_ID}}"
										}
									]
								},
								"description": "Remove an existing field group through a DELETE request to the `$id` of the field group being removed.\n\nA successful deletion returns an empty response body and HTTP status 204 (No Content)."
							},
							"response": []
						},
						{
							"name": "Step 5 - Create a Custom Field Group (latest actions) Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"FG_LATEST_ACTIONS_ID\", data[\"$id\"]);\r",
											"postman.setEnvironmentVariable(\"FG_LATEST_ACTIONS_META_ALTID\", data[\"meta:altId\"]);\r",
											"\r",
											"// pm.collectionVariables.set(\"field_group_latest_actions_id\", data[\"$id\"]);\r",
											"// pm.collectionVariables.set(\"field_group_latest_actions_meta_altid\", data[\"meta:altId\"]);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{FIELD_GROUP_LATEST_ACTIONS_PAYLOAD}}"
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/mixins/",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"mixins",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 - Delete a custom field group Copy 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/fieldgroups/:FIELD_GROUP_ID",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										"tenant",
										"fieldgroups",
										":FIELD_GROUP_ID"
									],
									"variable": [
										{
											"key": "FIELD_GROUP_ID",
											"value": "{{FG_LATEST_ACTIONS_META_ALTID}}",
											"description": "{{FIELD_GROUP_ID}}"
										}
									]
								},
								"description": "Remove an existing field group through a DELETE request to the `$id` of the field group being removed.\n\nA successful deletion returns an empty response body and HTTP status 204 (No Content)."
							},
							"response": []
						}
					]
				},
				{
					"name": "2 - Conntainer ID examples",
					"item": [
						{
							"name": "List field groups (with \"bad\" CONTAINER_ID = {{CONTAINER_ID}})",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.adobe.xed-id+json",
										"description": "The desired response format (application/vnd.adobe.xed-full+json).",
										"type": "string"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/fieldgroups?property={{property}}&orderby={{orderby}}&start={{start}}&limit={{limit}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"fieldgroups"
									],
									"query": [
										{
											"key": "property",
											"value": "{{property}}"
										},
										{
											"key": "orderby",
											"value": "{{orderby}}"
										},
										{
											"key": "start",
											"value": "{{start}}"
										},
										{
											"key": "limit",
											"value": "{{limit}}"
										}
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "{{CONTAINER_ID}}"
										}
									]
								},
								"description": "Retrieve a list of field groups within the specified container."
							},
							"response": []
						},
						{
							"name": "List field groups (CONTAINER_ID = global)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.adobe.xed-id+json",
										"description": "The desired response format (application/vnd.adobe.xed-full+json).",
										"type": "string"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/fieldgroups?property={{property}}&orderby={{orderby}}&start={{start}}&limit={{limit}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"fieldgroups"
									],
									"query": [
										{
											"key": "property",
											"value": "{{property}}"
										},
										{
											"key": "orderby",
											"value": "{{orderby}}"
										},
										{
											"key": "start",
											"value": "{{start}}"
										},
										{
											"key": "limit",
											"value": "{{limit}}"
										}
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "global"
										}
									]
								},
								"description": "Retrieve a list of field groups within the specified container."
							},
							"response": []
						},
						{
							"name": "List field groups (CONTAINER_ID = tenant)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.adobe.xed-id+json",
										"description": "The desired response format (application/vnd.adobe.xed-full+json).",
										"type": "string"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The IMS Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/fieldgroups?property={{property}}&orderby={{orderby}}&start={{start}}&limit={{limit}}",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"schemaregistry",
										":CONTAINER_ID",
										"fieldgroups"
									],
									"query": [
										{
											"key": "property",
											"value": "{{property}}"
										},
										{
											"key": "orderby",
											"value": "{{orderby}}"
										},
										{
											"key": "start",
											"value": "{{start}}"
										},
										{
											"key": "limit",
											"value": "{{limit}}"
										}
									],
									"variable": [
										{
											"key": "CONTAINER_ID",
											"value": "tenant"
										}
									]
								},
								"description": "Retrieve a list of field groups within the specified container."
							},
							"response": []
						}
					]
				},
				{
					"name": "3 - Source (Azure DLZ)",
					"item": [
						{
							"name": "Source - Azure DLZ",
							"item": [
								{
									"name": "Step 1 - Get Azure Crendentials",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var moddate = -1;",
													"var d = new Date();",
													"var mm = (d.getMonth() + 1 + moddate).toString().padStart(2, \"0\");",
													"var yyyy = d.getFullYear();",
													"",
													"postman.setEnvironmentVariable(\"AWS_MONTH\", mm);",
													"postman.setEnvironmentVariable(\"AWS_YEAR\", yyyy);",
													"",
													"/** pm.globals.set(\"AWS_MONTH\", mm); */",
													"/** pm.globals.set(\"AWS_YEAR\", yyyy); */",
													"",
													"/** postman.setEnvironmentVariable(\"TRAVEL_HOTEL_CRM_DATA_SOURCE_CONN_ID\", data[\"id\"]); */",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"AZURE_DLZ_CONTAINERNAME\", data[\"containerName\"]);\r",
													"postman.setEnvironmentVariable(\"AZURE_DLZ_SASTOKEN\", data[\"SASToken\"]);\r",
													"postman.setEnvironmentVariable(\"AZURE_DLZ_STORAGEACCOUNTNAME\", data[\"storageAccountName\"]);\r",
													"postman.setEnvironmentVariable(\"AZURE_DLZ_SASURI\", data[\"SASUri\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/connectors/landingzone/credentials?type=user_drop_zone",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"connectors",
												"landingzone",
												"credentials"
											],
											"query": [
												{
													"key": "type",
													"value": "user_drop_zone"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Connection - Azure DLZ",
							"item": [
								{
									"name": "Step 4 - CRM S3 Create a new source connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var moddate = -1;",
													"var d = new Date();",
													"var mm = (d.getMonth() + 1 + moddate).toString().padStart(2, \"0\");",
													"var yyyy = d.getFullYear();",
													"",
													"postman.setEnvironmentVariable(\"AWS_MONTH\", mm);",
													"postman.setEnvironmentVariable(\"AWS_YEAR\", yyyy);",
													"",
													"/** pm.globals.set(\"AWS_MONTH\", mm); */",
													"/** pm.globals.set(\"AWS_YEAR\", yyyy); */",
													"",
													"/** postman.setEnvironmentVariable(\"TRAVEL_HOTEL_CRM_DATA_SOURCE_CONN_ID\", data[\"id\"]); */",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_DATA_SOURCE_CONN_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Source Connection for CRM data - {{AWS_YEAR}}\",\r\n    \"baseConnectionId\": \"{{AWS_S3_CONNECTOR_ID}}\",\r\n    \"description\": \"Source Connection for CRM data - {{AWS_YEAR}}\",\r\n    \"data\": {\r\n        \"format\": \"json\"\r\n    },\r\n    \"params\": {\r\n        \"path\": \"{{PATH_CRM_DATA_FILE_PATH}}{{AWS_YEAR}}*.json\",\r\n        \"recursive\": \"true\"\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{AWS_S3_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5 - CRM S3 Create a new target connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_DATA_TARGET_CONN_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Target Connection for CRM data - {{AWS_YEAR}}\",\r\n    \"description\": \"Target Connection for CRM data - {{AWS_YEAR}}\",\r\n    \"data\": {\r\n        \"format\": \"parquet_xdm\",\r\n        \"schema\": {\r\n            \"id\": \"{{CRM_SCHEMA_ID}}\",\r\n            \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n        }\r\n    },\r\n    \"params\": {\r\n        \"dataSetId\": \"{{CRM_DATASET_ID}}\"\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{DATALAKE_CONNECTOR_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6 - Create a new dataflow",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var ts = Math.round((new Date()).getTime() / 1000);",
													"pm.globals.set(\"ts\", ts);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_DATA_FLOW_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Dataflow for CRM Data via AWS S3 - {{AWS_YEAR}}\",\r\n    \"description\": \"Dataflow for CRM Data via AWS S3 - {{AWS_YEAR}}\",\r\n    \"flowSpec\": {\r\n        \"id\": \"{{CLOUD_STOR_FLOWSPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{CRM_DATA_SOURCE_CONN_ID}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{CRM_DATA_TARGET_CONN_ID}}\"\r\n    ],\r\n    \"transformations\": [],\r\n    \"scheduleParams\": {\r\n        \"startTime\": \"{{ts}}\",\r\n        \"frequency\": \"minute\",\r\n        \"interval\": \"15\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "4 - API Segments",
					"item": [
						{
							"name": "Create UPS Dataset",
							"item": [
								{
									"name": "Step 1 - Create a new schema - CRM Extra Credit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(\"CRM_EXTRA_CREDIT_SCHEMA_ID\", data[\"$id\"]);\r",
													"pm.collectionVariables.set(\"CRM_EXTRA_CREDIT_SCHEMA_META_ALTID\", data[\"meta:altId\"]);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"description\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/identitymap\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile-person-details\"\r\n        }\r\n    ]\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas/",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"schemas",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 - Schema modify (enable for profile)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/schemas/:SCHEMA_ID_TO_PATCH",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												":CONTAINER_ID",
												"schemas",
												":SCHEMA_ID_TO_PATCH"
											],
											"variable": [
												{
													"key": "CONTAINER_ID",
													"value": "tenant"
												},
												{
													"key": "SCHEMA_ID_TO_PATCH",
													"value": "{{CRM_EXTRA_CREDIT_SCHEMA_META_ALTID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3 - CRM Create dataset",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_EXTRA_CREDIT_DATASET_ID\", data[0].substring(11, data[0].length));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "accept-encoding",
												"value": "{{accept-encoding}}",
												"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"description\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{CRM_EXTRA_CREDIT_SCHEMA_ID}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"catalog",
												"dataSets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4 - Dataset modify (enable for profile)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json-patch+json",
												"description": "this needs to be: application/json-patch+json NOT: application/json || https://jira.corp.adobe.com/browse/PLATIR-14798"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "accept-encoding",
												"value": "{{accept-encoding}}",
												"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/tags/unifiedProfile\",\r\n        \"value\": [\r\n            \"enabled:true\"\r\n        ]\r\n    },\r\n     {\r\n        \"op\": \"add\",\r\n        \"path\": \"/tags/unifiedIdentity\",\r\n        \"value\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n]"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets/:DATASET_ID",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"catalog",
												"dataSets",
												":DATASET_ID"
											],
											"variable": [
												{
													"key": "DATASET_ID",
													"value": "{{CRM_EXTRA_CREDIT_DATASET_ID}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Obtain Merge Policy",
							"item": [
								{
									"name": "Step 1 - Confirm UIS and UPS",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data       = JSON.parse(responseBody);\r",
													"var dataset_id = pm.environment.get(\"CRM_EXTRA_CREDIT_DATASET_ID\")\r",
													"\r",
													"const maxNumberOfTries  = 5; // your max number of tries\r",
													"const sleepBetweenTries = 15000; // your interval between attempts -- wait 15 seconds\r",
													"\r",
													"\r",
													"if (!pm.environment.get(\"tries\")) {\r",
													"    pm.environment.set(\"tries\", 1);\r",
													"}\r",
													"\r",
													"//////////// see if there's still an issue - go back a step\r",
													"\r",
													"for (item in data[dataset_id][\"tags\"][\"unifiedProfile\"]) {\r",
													"    //console.log(data[dataset_id][\"tags\"][\"unifiedProfile\"][item]);\r",
													"    if ((data[dataset_id][\"tags\"][\"unifiedProfile\"][item] == \"enabled:false\")  && (pm.environment.get(\"tries\") < maxNumberOfTries)) {\r",
													"        const tries = parseInt(pm.environment.get(\"tries\"), 10);  // I think the 10 here makes it base10 ??  I've got no clue honestly\r",
													"        pm.environment.set(\"tries\", tries + 1);\r",
													"        //console.log(\"current count of tries is....\");\r",
													"        //console.log(pm.environment.get(\"tries\"));\r",
													"        setTimeout(function() {}, sleepBetweenTries);\r",
													"        postman.setNextRequest(\"Step 4 - Dataset modify (enable for profile)\");\r",
													"    };\r",
													"};\r",
													"\r",
													"\r",
													"//////////// see if there's no problem -- proceed\r",
													"\r",
													"for (item in data[dataset_id][\"tags\"][\"unifiedProfile\"]) {\r",
													"    //console.log(data[dataset_id][\"tags\"][\"unifiedProfile\"][item]);\r",
													"    if ((data[dataset_id][\"tags\"][\"unifiedProfile\"][item] == \"enabled:true\")) {\r",
													"       postman.setNextRequest(\"Step 2 - Confirm Merge Policy\");\r",
													"       pm.environment.unset(\"tries\");\r",
													"    };\r",
													"};\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "accept-encoding",
												"value": "{{accept-encoding}}",
												"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets/:DATASET_ID",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"catalog",
												"dataSets",
												":DATASET_ID"
											],
											"query": [
												{
													"key": "properties",
													"value": "{{properties}}",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "DATASET_ID",
													"value": "{{CRM_EXTRA_CREDIT_DATASET_ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 - Confirm Merge Policy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"\r",
													"const maxNumberOfTries = 5; // your max number of tries\r",
													"const sleepBetweenTries = 5000; // your interval between attempts\r",
													"\r",
													"if (!pm.environment.get(\"tries\")) {\r",
													"    pm.environment.set(\"tries\", 1);\r",
													"}\r",
													"\r",
													"if ((data[\"children\"][0][\"id\"] == null)  && (pm.environment.get(\"tries\") < maxNumberOfTries)) {\r",
													"     const tries = parseInt(pm.environment.get(\"tries\"), 10);\r",
													"     pm.environment.set(\"tries\", tries + 1);\r",
													"     setTimeout(function() {}, sleepBetweenTries);\r",
													"     postman.setNextRequest(request.name);\r",
													" } else {\r",
													"     postman.setEnvironmentVariable(\"DEFAULT_MERGE_POLICY_PROFILE\", data[\"children\"][0][\"id\"]);\r",
													"     pm.environment.unset(\"tries\");\r",
													"     // your actual tests go here...\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "Request Id",
												"type": "string",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/config/mergePolicies",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"mergePolicies"
											],
											"query": [
												{
													"key": "start",
													"value": "{{start}}",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "{{limit}}",
													"disabled": true
												},
												{
													"key": "orderBy",
													"value": "{{orderBy}}",
													"disabled": true
												},
												{
													"key": "default",
													"value": "{{default}}",
													"disabled": true
												},
												{
													"key": "schema.name",
													"value": "{{schema.name}}",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Convert PQL Segment Text to JSON Examples",
							"item": [
								{
									"name": "Convert a segment definition - multi",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"function sortObject(obj) {\r",
													"    return Object.keys(obj).sort().reduce(function (result, key) {\r",
													"        result[key] = obj[key];\r",
													"        return result;\r",
													"    }, {});\r",
													"}\r",
													"\r",
													"function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}\r",
													"\r",
													"\r",
													"var data      = JSON.parse(responseBody);\r",
													"var newstuff  = JSON.parse(data[\"expression\"][\"value\"]);\r",
													"var newdata   = JSON.stringify(newstuff);\r",
													"var newhash2  = createhash(newdata);\r",
													"var newresult = JSON.stringify(newdata);\r",
													"var result    = newresult.match(/\"(.*)\"/);;\r",
													"\r",
													"postman.setEnvironmentVariable(\"SEGMENT_EXPRESSION_VALUE_PQL\", result[1]);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash2);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"string\",\r\n  \"imsOrgId\": \"{{IMS_ORG}}\",\r\n  \"name\": \"Test Segment Name\",\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\",\r\n  \"profileInstanceId\": \"ups\",\r\n  \"description\": \"Test Segment Description\",\r\n  \"expression\": {\r\n    \"type\": \"PQL\",\r\n    \"format\": \"pql/text\",\r\n    \"value\": \"stringCompare(\\\"=\\\", homeAddress.stateProvince, [\\\"CA\\\", \\\"NJ\\\", \\\"NY\\\"], false)\"\r\n  },\r\n  \"schema\": {\r\n    \"name\": \"_xdm.context.profile\"\r\n  },\r\n  \"evaluationInfo\": {\r\n    \"batch\": {},\r\n    \"continuous\": {},\r\n    \"synchronous\": {}\r\n  },\r\n  \"payloadSchema\": \"string\",\r\n  \"ttlInDays\": 60,\r\n  \"creationTime\": 0,\r\n  \"updateTime\": 0,\r\n  \"updateEpoch\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/conversion",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"conversion"
											]
										},
										"description": "This endpoint converts a segment definition from pql/text to pql/json or from pql/json to pql/text."
									},
									"response": []
								},
								{
									"name": "Convert a segment definition - event this month",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"var inputval = 'CHAIN(xEvent, timestamp, [C0: WHAT(eventType.equals(\"advertising.impressions\", false)) WHEN(this month)])'",
													"var inrepl   = inputval.replace(/\"/g,'\\\\\"')",
													"postman.setEnvironmentVariable(\"INPUT_STATEMENT\", inrepl);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"function sortObject(obj) {\r",
													"    return Object.keys(obj).sort().reduce(function (result, key) {\r",
													"        result[key] = obj[key];\r",
													"        return result;\r",
													"    }, {});\r",
													"}\r",
													"\r",
													"function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}\r",
													"\r",
													"\r",
													"var data      = JSON.parse(responseBody);\r",
													"var newstuff  = JSON.parse(data[\"expression\"][\"value\"]);\r",
													"var newdata   = JSON.stringify(newstuff);\r",
													"var newhash2  = createhash(newdata);\r",
													"var newresult = JSON.stringify(newdata);\r",
													"var result    = newresult.match(/\"(.*)\"/);;\r",
													"\r",
													"postman.setEnvironmentVariable(\"SEGMENT_EXPRESSION_VALUE_PQL\", result[1]);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash2);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"string\",\r\n  \"imsOrgId\": \"{{IMS_ORG}}\",\r\n  \"name\": \"Test Segment Name\",\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\",\r\n  \"profileInstanceId\": \"ups\",\r\n  \"description\": \"Test Segment Description\",\r\n  \"expression\": {\r\n    \"type\": \"PQL\",\r\n    \"format\": \"pql/text\",\r\n    \"value\": \"{{INPUT_STATEMENT}}\"\r\n  },\r\n  \"schema\": {\r\n    \"name\": \"_xdm.context.profile\"\r\n  },\r\n  \"evaluationInfo\": {\r\n    \"batch\": {},\r\n    \"continuous\": {},\r\n    \"synchronous\": {}\r\n  },\r\n  \"payloadSchema\": \"string\",\r\n  \"ttlInDays\": 60,\r\n  \"creationTime\": 0,\r\n  \"updateTime\": 0,\r\n  \"updateEpoch\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/conversion",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"conversion"
											]
										},
										"description": "This endpoint converts a segment definition from pql/text to pql/json or from pql/json to pql/text."
									},
									"response": []
								},
								{
									"name": "Convert a segment definition - 2 diff attributes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"var inputval = 'person.gender in [\"female\"] and person.maritalStatus in [\"single\"]'",
													"var inrepl   = inputval.replace(/\"/g,'\\\\\"')",
													"postman.setEnvironmentVariable(\"INPUT_STATEMENT\", inrepl);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"function sortObject(obj) {\r",
													"    return Object.keys(obj).sort().reduce(function (result, key) {\r",
													"        result[key] = obj[key];\r",
													"        return result;\r",
													"    }, {});\r",
													"}\r",
													"\r",
													"function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}\r",
													"\r",
													"\r",
													"var data      = JSON.parse(responseBody);\r",
													"var newstuff  = JSON.parse(data[\"expression\"][\"value\"]);\r",
													"var newdata   = JSON.stringify(newstuff);\r",
													"var newhash2  = createhash(newdata);\r",
													"var newresult = JSON.stringify(newdata);\r",
													"var result    = newresult.match(/\"(.*)\"/);;\r",
													"\r",
													"postman.setEnvironmentVariable(\"SEGMENT_EXPRESSION_VALUE_PQL\", result[1]);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash2);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"string\",\r\n  \"imsOrgId\": \"{{IMS_ORG}}\",\r\n  \"name\": \"Test Segment Name\",\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\",\r\n  \"profileInstanceId\": \"ups\",\r\n  \"description\": \"Test Segment Description\",\r\n  \"expression\": {\r\n    \"type\": \"PQL\",\r\n    \"format\": \"pql/text\",\r\n    \"value\": \"{{INPUT_STATEMENT}}\"\r\n  },\r\n  \"schema\": {\r\n    \"name\": \"_xdm.context.profile\"\r\n  },\r\n  \"evaluationInfo\": {\r\n    \"batch\": {},\r\n    \"continuous\": {},\r\n    \"synchronous\": {}\r\n  },\r\n  \"payloadSchema\": \"string\",\r\n  \"ttlInDays\": 60,\r\n  \"creationTime\": 0,\r\n  \"updateTime\": 0,\r\n  \"updateEpoch\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/conversion",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"conversion"
											]
										},
										"description": "This endpoint converts a segment definition from pql/text to pql/json or from pql/json to pql/text."
									},
									"response": []
								}
							]
						},
						{
							"name": "Standard (HAR traffic)",
							"item": [
								{
									"name": "Step 1 - Gender: Male",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"Gender: Male\",\"description\": \"Gender: Male\",\"evaluationInfo\": {\"synchronous\": {\"enabled\":false}},\"expression\": {\"format\": \"pql/json\", \"value\": \"{\\\"nodeType\\\":\\\"fnApply\\\",\\\"fnName\\\":\\\"in\\\",\\\"params\\\":[{\\\"nodeType\\\":\\\"fieldLookup\\\",\\\"fieldName\\\":\\\"gender\\\",\\\"object\\\":{\\\"nodeType\\\":\\\"fieldLookup\\\",\\\"fieldName\\\":\\\"person\\\",\\\"object\\\":{\\\"nodeType\\\":\\\"parameterReference\\\",\\\"position\\\":1}}},{\\\"literalType\\\":\\\"List\\\",\\\"nodeType\\\":\\\"literal\\\",\\\"value\\\":[\\\"male\\\"]}]}\"},\"schema\": {\"id\": \"some id\", \"name\": \"_xdm.context.profile\"},\"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/definitions",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"definitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 - Gender: Male",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ANSIBLE_ID\",  data[\"id\"]);\r",
													"\r",
													"// HASH val = 1354778730"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"id\": \"{{SEGMENT_ID}}\", \"version\": \"1.0.0\", \"dataModel\": {\"expression\": {\"isValid\":true, \"logicalOperator\": \"and\", \"profileAttributesContainer\": {\"exclude\":false, \"items\": [{\"comparisonType\": \"in\", \"component\": {\"id\": \"profile.person.gender\", \"__entity__\":true, \"type\": \"n\"}, \"isPlaceholder\":false, \"originalLocation\": [], \"value\": [\"male\"]}], \"logicalOperator\": \"and\", \"itemType\": \"segmentContainer\"}, \"xEventAttributesContainer\": {\"exclude\":false, \"items\": [], \"logicalOperator\": \"then\", \"itemType\": \"eventTypeCardContainer\"}}}, \"hash\": 1354778730}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/config/ansibleUIModels/",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"ansibleUIModels",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Advanced (manual)",
							"item": [
								{
									"name": "Step 1 - Gender: Female",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"Gender: Male\",\"description\": \"Gender: Male\",\"evaluationInfo\": {\"synchronous\": {\"enabled\":false}},\"expression\": {\"format\": \"pql/json\", \"value\": \"{\\\"nodeType\\\":\\\"fnApply\\\",\\\"fnName\\\":\\\"in\\\",\\\"params\\\":[{\\\"nodeType\\\":\\\"fieldLookup\\\",\\\"fieldName\\\":\\\"gender\\\",\\\"object\\\":{\\\"nodeType\\\":\\\"fieldLookup\\\",\\\"fieldName\\\":\\\"person\\\",\\\"object\\\":{\\\"nodeType\\\":\\\"parameterReference\\\",\\\"position\\\":1}}},{\\\"literalType\\\":\\\"List\\\",\\\"nodeType\\\":\\\"literal\\\",\\\"value\\\":[\\\"male\\\"]}]}\"},\"schema\": {\"id\": \"some id\", \"name\": \"_xdm.context.profile\"},\"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/definitions",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"definitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 - Gender: Female",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ANSIBLE_ID\",  data[\"id\"]);\r",
													"\r",
													"// HASH val = 1354778730"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"id\": \"{{SEGMENT_ID}}\", \"version\": \"1.0.0\", \"dataModel\": {\"expression\": {\"isValid\":true, \"logicalOperator\": \"and\", \"profileAttributesContainer\": {\"exclude\":false, \"items\": [{\"comparisonType\": \"in\", \"component\": {\"id\": \"profile.person.gender\", \"__entity__\":true, \"type\": \"n\"}, \"isPlaceholder\":false, \"originalLocation\": [], \"value\": [\"male\"]}], \"logicalOperator\": \"and\", \"itemType\": \"segmentContainer\"}, \"xEventAttributesContainer\": {\"exclude\":false, \"items\": [], \"logicalOperator\": \"then\", \"itemType\": \"eventTypeCardContainer\"}}}, \"hash\": 1354778730}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/config/ansibleUIModels/",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"ansibleUIModels",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Complex (external file + manipulation)",
							"item": [
								{
									"name": "Convert a segment definition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"var body = JSON.parse(request.data);",
													"postman.setEnvironmentVariable(\"SEGMENT_NAME\", body[\"name\"]);",
													"postman.setEnvironmentVariable(\"SEGMENT_DESCRIPTION\", body[\"description\"]);",
													"",
													"",
													"var segInputNew = \"profile.\" + pm.variables.get(\"SEGMENT_INPUT\");",
													"postman.setEnvironmentVariable(\"SEGMENT_INPUT_NEW\", segInputNew);",
													"console.log(segInputNew);",
													"",
													"",
													"",
													"",
													"",
													"//var val1 = body[\"expression\"][\"value\"]",
													"//var nval1 = val1.split(\"=\")",
													"//console.log(nval1[0].trim())",
													"//console.log(nval1[1].trim().replace(/\"/g,''))",
													"",
													"// var seg_eval = pm.variables.get(\"SEGMENT_EVAL\");",
													"// if (seg_eval == \"batch\") {",
													"//     var seg_eval_large = '\"batch\": true, \"continuous\": false, \"synchronous\": false'",
													"// }",
													"// if (seg_eval == \"continuous\") {",
													"//     var seg_eval_large = '\"batch\": false, \"continuous\": true, \"synchronous\": false'",
													"// }",
													"// if (seg_eval == \"synchronous\") {",
													"//     var seg_eval_large = '\"batch\": false, \"continuous\": false, \"synchronous\": true'",
													"// }",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"function sortObject(obj) {\r",
													"    return Object.keys(obj).sort().reduce(function (result, key) {\r",
													"        result[key] = obj[key];\r",
													"        return result;\r",
													"    }, {});\r",
													"}\r",
													"\r",
													"function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}\r",
													"\r",
													"\r",
													"var data      = JSON.parse(responseBody);\r",
													"var newstuff  = JSON.parse(data[\"expression\"][\"value\"]);\r",
													"var better    = sortObject(newstuff.params[1]);\r",
													"newstuff.params.splice(1, 1);\r",
													"newstuff.params.push(better);\r",
													"var newdata   = JSON.stringify(newstuff);\r",
													"var newhash2  = createhash(newdata);\r",
													"var newresult = JSON.stringify(newdata);\r",
													"var result    = newresult.match(/\"(.*)\"/);;\r",
													"\r",
													"postman.setEnvironmentVariable(\"SEGMENT_EXPRESSION_VALUE_PQL\", result[1]);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash2);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"string\",\r\n  \"imsOrgId\": \"{{IMS_ORG}}\",\r\n  \"name\": \"{{SEGMENT_NAME}}\",\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\",\r\n  \"profileInstanceId\": \"ups\",\r\n  \"description\": \"{{SEGMENT_DESCRIPTION}}\",\r\n  \"expression\": {\r\n    \"type\": \"PQL\",\r\n    \"format\": \"pql/text\",\r\n    \"value\": \"{{SEGMENT_INPUT}} {{SEGMENT_OPERATOR}} [\\\"{{SEGMENT_VALUE}}\\\"]\"\r\n  },\r\n  \"schema\": {\r\n    \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"\r\n  },\r\n  \"evaluationInfo\": {\r\n    \"batch\": {},\r\n    \"continuous\": {},\r\n    \"synchronous\": {}\r\n  },\r\n  \"payloadSchema\": \"string\",\r\n  \"ttlInDays\": 60,\r\n  \"creationTime\": 0,\r\n  \"updateTime\": 0,\r\n  \"updateEpoch\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/conversion",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"conversion"
											]
										},
										"description": "This endpoint converts a segment definition from pql/text to pql/json or from pql/json to pql/text."
									},
									"response": []
								},
								{
									"name": "API Segment Create - step 01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"// function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}",
													"",
													"// var body = JSON.parse(request.data);",
													"// console.log(body[\"expression\"][\"value\"]);",
													"// var newhash = createhash(body[\"expression\"][\"value\"]);",
													"// console.log(newhash);",
													"// postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash);",
													"",
													"",
													"// // var seg_eval = pm.variables.get(\"SEGMENT_EVAL\");",
													"// // if (seg_eval == \"batch\") {",
													"// //     var seg_eval_large = {\"batch\": {\"enable\":true}}",
													"// // }",
													"",
													"// var seg_eval = pm.variables.get(\"SEGMENT_EVAL\");",
													"// if (seg_eval == \"batch\") {",
													"//     var seg_eval_large = {batch: {enable:true}}",
													"// }",
													"",
													"// // if (seg_eval == \"continuous\") {",
													"// //     var seg_eval_large = {\"continuous\": {\"enable\":true}}",
													"// // }",
													"// // if (seg_eval == \"synchronous\") {",
													"// //     var seg_eval_large = {\"synchronous\": {\"enable\":true}}",
													"// // }",
													"",
													"// //pm.collectionVariables.set(\"SEGMENT_EVAL_OBJECT\", JSON.stringify(seg_eval_large));",
													"// //postman.setEnvironmentVariable(\"SEGMENT_EVAL_OBJECT\", JSON.stringify(seg_eval_large));",
													"",
													"// pm.collectionVariables.set(\"SEGMENT_EVAL_OBJECT\", JSON.parse(seg_eval_large));",
													"// postman.setEnvironmentVariable(\"SEGMENT_EVAL_OBJECT\", JSON.paset(seg_eval_large));",
													"",
													"// console.log(\"plaease\")",
													"// console.log(seg_eval_large)",
													"",
													"",
													"// //   \"evaluationInfo\": {{SEGMENT_EVAL_OBJECT}},  I removed this == maybe get an error???",
													"",
													"",
													"// // http://postman-echo.com/post",
													"// // https://platform.adobe.io/data/core/ups/segment/definitions",
													"",
													"",
													"// // {",
													"// //   \"name\": \"{{SEGMENT_NAME}}\",",
													"// //   \"description\": \"{{SEGMENT_DESCRIPTION}}\",",
													"// //   \"expression\": {",
													"// //     \"format\": \"pql/json\",",
													"// //     \"value\": \"{{SEGMENT_EXPRESSION_VALUE_PQL}}\"",
													"// //   },",
													"// //   \"schema\": {",
													"// //     \"id\": \"string\",",
													"// //     \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"",
													"// //   },",
													"// //   \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"",
													"// // }",
													"",
													"",
													"// // var jsonBodyVar = {",
													"// //   \"name\": \"{{SEGMENT_NAME}}\",",
													"// //   \"description\": \"{{SEGMENT_DESCRIPTION}}\",",
													"// //   \"expression\": {",
													"// //     \"format\": \"pql/json\",",
													"// //     \"value\": \"{{SEGMENT_EXPRESSION_VALUE_PQL}}\"",
													"// //   },",
													"// //   \"schema\": {",
													"// //     \"id\": \"string\",",
													"// //     \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"",
													"// //   },",
													"// //   \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"",
													"// // }",
													"",
													"// // pm.collectionVariables.set(\"jsonBody\", JSON.stringify(jsonBodyVar));",
													"// // console.log(pm.collectionVariables.get(\"jsonBody\"))",
													"",
													"// var segmentName        = pm.variables.get(\"SEGMENT_NAME\")",
													"// var segmentDescription = pm.variables.get(\"SEGMENT_DESCRIPTION\")",
													"// var segmentExpValuePQL = pm.variables.get(\"SEGMENT_EXPRESSION_VALUE_PQL\")",
													"// var segmentSchemaName  = pm.variables.get(\"SEGMENT_SCHEMA_NAME\")",
													"// var defaultMPProfile   = pm.variables.get(\"DEFAULT_MERGE_POLICY_PROFILE\")",
													"",
													"// DEFAULT_MERGE_POLICY_PROFILE",
													"",
													"// var jsonBodyVar = {",
													"//   \"name\": segmentName,",
													"//   \"description\": segmentDescription,",
													"//   \"expression\": {",
													"//     \"format\": \"pql/json\",",
													"//     \"value\": segmentExpValuePQL",
													"//   },",
													"//   \"schema\": {",
													"//     \"id\": \"string\",",
													"//     \"name\": segmentSchemaName",
													"//   },",
													"//   \"mergePolicyId\": defaultMPProfile",
													"// }",
													"",
													"// pm.collectionVariables.set(\"jsonBody\", JSON.stringify(jsonBodyVar));",
													"// console.log(pm.collectionVariables.get(\"jsonBody\"))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{SEGMENT_NAME}}\",\r\n  \"description\": \"{{SEGMENT_DESCRIPTION}}\",\r\n  \"expression\": {\r\n    \"format\": \"pql/json\",\r\n    \"value\": \"{{SEGMENT_EXPRESSION_VALUE_PQL}}\"\r\n  },\r\n  \"schema\": {\r\n    \"id\": \"some id\",\r\n    \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"\r\n  },\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/definitions",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"definitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "API Segment Create - step 02",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ANSIBLE_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"{{SEGMENT_ID}}\",\r\n  \"version\": \"1.0.0\",\r\n  \"dataModel\": {\r\n    \"expression\": {\r\n      \"isValid\": true,\r\n      \"logicalOperator\": \"and\",\r\n      \"profileAttributesContainer\": {\r\n        \"exclude\": false,\r\n        \"items\": [\r\n          {\r\n            \"comparisonType\": \"in\",\r\n            \"component\": {\r\n              \"id\": \"{{SEGMENT_INPUT_NEW}}\",\r\n              \"__entity__\": true,\r\n              \"type\": \"n\"\r\n            },\r\n            \"isPlaceholder\": false,\r\n            \"originalLocation\": [],\r\n            \"value\": [\r\n              \"{{SEGMENT_VALUE}}\"\r\n            ]\r\n          }\r\n        ],\r\n        \"logicalOperator\": \"and\",\r\n        \"itemType\": \"segmentContainer\"\r\n      },\r\n      \"xEventAttributesContainer\": {\r\n        \"exclude\": false,\r\n        \"items\": [],\r\n        \"logicalOperator\": \"then\",\r\n        \"itemType\": \"eventTypeCardContainer\"\r\n      }\r\n    }\r\n  },\r\n  \"hash\": {{SEGMENT_HASH}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/config/ansibleUIModels/",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"ansibleUIModels",
												""
											]
										}
									},
									"response": []
								}
							],
							"description": "Extra Data:\n\nDownload from here"
						},
						{
							"name": "Complex (external file + no-manipulation)",
							"item": [
								{
									"name": "Convert a segment definition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"var body = JSON.parse(request.data);",
													"postman.setEnvironmentVariable(\"SEGMENT_NAME\", body[\"name\"]);",
													"postman.setEnvironmentVariable(\"SEGMENT_DESCRIPTION\", body[\"description\"]);",
													"",
													"",
													"var segInputNew = \"profile.\" + pm.variables.get(\"SEGMENT_INPUT\");",
													"postman.setEnvironmentVariable(\"SEGMENT_INPUT_NEW\", segInputNew);",
													"console.log(segInputNew);",
													"",
													"",
													"",
													"",
													"",
													"//var val1 = body[\"expression\"][\"value\"]",
													"//var nval1 = val1.split(\"=\")",
													"//console.log(nval1[0].trim())",
													"//console.log(nval1[1].trim().replace(/\"/g,''))",
													"",
													"// var seg_eval = pm.variables.get(\"SEGMENT_EVAL\");",
													"// if (seg_eval == \"batch\") {",
													"//     var seg_eval_large = '\"batch\": true, \"continuous\": false, \"synchronous\": false'",
													"// }",
													"// if (seg_eval == \"continuous\") {",
													"//     var seg_eval_large = '\"batch\": false, \"continuous\": true, \"synchronous\": false'",
													"// }",
													"// if (seg_eval == \"synchronous\") {",
													"//     var seg_eval_large = '\"batch\": false, \"continuous\": false, \"synchronous\": true'",
													"// }",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"function sortObject(obj) {\r",
													"    return Object.keys(obj).sort().reduce(function (result, key) {\r",
													"        result[key] = obj[key];\r",
													"        return result;\r",
													"    }, {});\r",
													"}\r",
													"\r",
													"function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}\r",
													"\r",
													"\r",
													"var data      = JSON.parse(responseBody);\r",
													"var newstuff  = JSON.parse(data[\"expression\"][\"value\"]);\r",
													"var newdata   = JSON.stringify(newstuff);\r",
													"var newhash2  = createhash(newdata);\r",
													"var newresult = JSON.stringify(newdata);\r",
													"var result    = newresult.match(/\"(.*)\"/);;\r",
													"\r",
													"postman.setEnvironmentVariable(\"SEGMENT_EXPRESSION_VALUE_PQL\", result[1]);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash2);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{x-request-id}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"string\",\r\n  \"imsOrgId\": \"{{IMS_ORG}}\",\r\n  \"name\": \"{{SEGMENT_NAME}}\",\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\",\r\n  \"profileInstanceId\": \"ups\",\r\n  \"description\": \"{{SEGMENT_DESCRIPTION}}\",\r\n  \"expression\": {\r\n    \"type\": \"PQL\",\r\n    \"format\": \"pql/text\",\r\n    \"value\": \"{{SEGMENT_INPUT}} {{SEGMENT_OPERATOR}} [\\\"{{SEGMENT_VALUE}}\\\"]\"\r\n  },\r\n  \"schema\": {\r\n    \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"\r\n  },\r\n  \"evaluationInfo\": {\r\n    \"batch\": {},\r\n    \"continuous\": {},\r\n    \"synchronous\": {}\r\n  },\r\n  \"payloadSchema\": \"string\",\r\n  \"ttlInDays\": 60,\r\n  \"creationTime\": 0,\r\n  \"updateTime\": 0,\r\n  \"updateEpoch\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/conversion",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"conversion"
											]
										},
										"description": "This endpoint converts a segment definition from pql/text to pql/json or from pql/json to pql/text."
									},
									"response": []
								},
								{
									"name": "API Segment Create - step 01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"// function createhash(str) {let hash = 0; let i; let chr; if (str.length === 0) return hash;for (i = 0; i < str.length; i++) {chr = str.charCodeAt(i);hash = ((hash << 5) - hash) + chr;hash |= 0; }return hash;}",
													"",
													"// var body = JSON.parse(request.data);",
													"// console.log(body[\"expression\"][\"value\"]);",
													"// var newhash = createhash(body[\"expression\"][\"value\"]);",
													"// console.log(newhash);",
													"// postman.setEnvironmentVariable(\"SEGMENT_HASH\", newhash);",
													"",
													"",
													"// // var seg_eval = pm.variables.get(\"SEGMENT_EVAL\");",
													"// // if (seg_eval == \"batch\") {",
													"// //     var seg_eval_large = {\"batch\": {\"enable\":true}}",
													"// // }",
													"",
													"// var seg_eval = pm.variables.get(\"SEGMENT_EVAL\");",
													"// if (seg_eval == \"batch\") {",
													"//     var seg_eval_large = {batch: {enable:true}}",
													"// }",
													"",
													"// // if (seg_eval == \"continuous\") {",
													"// //     var seg_eval_large = {\"continuous\": {\"enable\":true}}",
													"// // }",
													"// // if (seg_eval == \"synchronous\") {",
													"// //     var seg_eval_large = {\"synchronous\": {\"enable\":true}}",
													"// // }",
													"",
													"// //pm.collectionVariables.set(\"SEGMENT_EVAL_OBJECT\", JSON.stringify(seg_eval_large));",
													"// //postman.setEnvironmentVariable(\"SEGMENT_EVAL_OBJECT\", JSON.stringify(seg_eval_large));",
													"",
													"// pm.collectionVariables.set(\"SEGMENT_EVAL_OBJECT\", JSON.parse(seg_eval_large));",
													"// postman.setEnvironmentVariable(\"SEGMENT_EVAL_OBJECT\", JSON.paset(seg_eval_large));",
													"",
													"// console.log(\"plaease\")",
													"// console.log(seg_eval_large)",
													"",
													"",
													"// //   \"evaluationInfo\": {{SEGMENT_EVAL_OBJECT}},  I removed this == maybe get an error???",
													"",
													"",
													"// // http://postman-echo.com/post",
													"// // https://platform.adobe.io/data/core/ups/segment/definitions",
													"",
													"",
													"// // {",
													"// //   \"name\": \"{{SEGMENT_NAME}}\",",
													"// //   \"description\": \"{{SEGMENT_DESCRIPTION}}\",",
													"// //   \"expression\": {",
													"// //     \"format\": \"pql/json\",",
													"// //     \"value\": \"{{SEGMENT_EXPRESSION_VALUE_PQL}}\"",
													"// //   },",
													"// //   \"schema\": {",
													"// //     \"id\": \"string\",",
													"// //     \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"",
													"// //   },",
													"// //   \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"",
													"// // }",
													"",
													"",
													"// // var jsonBodyVar = {",
													"// //   \"name\": \"{{SEGMENT_NAME}}\",",
													"// //   \"description\": \"{{SEGMENT_DESCRIPTION}}\",",
													"// //   \"expression\": {",
													"// //     \"format\": \"pql/json\",",
													"// //     \"value\": \"{{SEGMENT_EXPRESSION_VALUE_PQL}}\"",
													"// //   },",
													"// //   \"schema\": {",
													"// //     \"id\": \"string\",",
													"// //     \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"",
													"// //   },",
													"// //   \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"",
													"// // }",
													"",
													"// // pm.collectionVariables.set(\"jsonBody\", JSON.stringify(jsonBodyVar));",
													"// // console.log(pm.collectionVariables.get(\"jsonBody\"))",
													"",
													"// var segmentName        = pm.variables.get(\"SEGMENT_NAME\")",
													"// var segmentDescription = pm.variables.get(\"SEGMENT_DESCRIPTION\")",
													"// var segmentExpValuePQL = pm.variables.get(\"SEGMENT_EXPRESSION_VALUE_PQL\")",
													"// var segmentSchemaName  = pm.variables.get(\"SEGMENT_SCHEMA_NAME\")",
													"// var defaultMPProfile   = pm.variables.get(\"DEFAULT_MERGE_POLICY_PROFILE\")",
													"",
													"// DEFAULT_MERGE_POLICY_PROFILE",
													"",
													"// var jsonBodyVar = {",
													"//   \"name\": segmentName,",
													"//   \"description\": segmentDescription,",
													"//   \"expression\": {",
													"//     \"format\": \"pql/json\",",
													"//     \"value\": segmentExpValuePQL",
													"//   },",
													"//   \"schema\": {",
													"//     \"id\": \"string\",",
													"//     \"name\": segmentSchemaName",
													"//   },",
													"//   \"mergePolicyId\": defaultMPProfile",
													"// }",
													"",
													"// pm.collectionVariables.set(\"jsonBody\", JSON.stringify(jsonBodyVar));",
													"// console.log(pm.collectionVariables.get(\"jsonBody\"))",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{SEGMENT_NAME}}\",\r\n  \"description\": \"{{SEGMENT_DESCRIPTION}}\",\r\n  \"expression\": {\r\n    \"format\": \"pql/json\",\r\n    \"value\": \"{{SEGMENT_EXPRESSION_VALUE_PQL}}\"\r\n  },\r\n  \"schema\": {\r\n    \"id\": \"some id\",\r\n    \"name\": \"{{SEGMENT_SCHEMA_NAME}}\"\r\n  },\r\n  \"mergePolicyId\": \"{{DEFAULT_MERGE_POLICY_PROFILE}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/segment/definitions",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"segment",
												"definitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "API Segment Create - step 02",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"SEGMENT_ANSIBLE_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "x-request-id",
												"value": "{{REQUEST_ID}}",
												"description": "A unique ID must be used per request.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"{{SEGMENT_ID}}\",\r\n  \"version\": \"1.0.0\",\r\n  \"dataModel\": {\r\n    \"expression\": {\r\n      \"isValid\": true,\r\n      \"logicalOperator\": \"and\",\r\n      \"profileAttributesContainer\": {\r\n        \"exclude\": false,\r\n        \"items\": [\r\n          {\r\n            \"comparisonType\": \"in\",\r\n            \"component\": {\r\n              \"id\": \"{{SEGMENT_INPUT_NEW}}\",\r\n              \"__entity__\": true,\r\n              \"type\": \"n\"\r\n            },\r\n            \"isPlaceholder\": false,\r\n            \"originalLocation\": [],\r\n            \"value\": [\r\n              \"{{SEGMENT_VALUE}}\"\r\n            ]\r\n          }\r\n        ],\r\n        \"logicalOperator\": \"and\",\r\n        \"itemType\": \"segmentContainer\"\r\n      },\r\n      \"xEventAttributesContainer\": {\r\n        \"exclude\": false,\r\n        \"items\": [],\r\n        \"logicalOperator\": \"then\",\r\n        \"itemType\": \"eventTypeCardContainer\"\r\n      }\r\n    }\r\n  },\r\n  \"hash\": {{SEGMENT_HASH}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://platform.adobe.io/data/core/ups/config/ansibleUIModels/",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"core",
												"ups",
												"config",
												"ansibleUIModels",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "5 - Create HTTP API Streaming Source",
					"item": [
						{
							"name": "Create UPS Dataset",
							"item": [
								{
									"name": "Step 1 - Create a new schema - CRM Extra Credit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(\"CRM_EXTRA_CREDIT_SCHEMA_ID\", data[\"$id\"]);\r",
													"pm.collectionVariables.set(\"CRM_EXTRA_CREDIT_SCHEMA_META_ALTID\", data[\"meta:altId\"]);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"type\": \"object\",\r\n    \"title\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"description\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"allOf\": [\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/identitymap\"\r\n        },\r\n        {\r\n            \"$ref\": \"https://ns.adobe.com/xdm/context/profile-person-details\"\r\n        }\r\n    ]\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/schemaregistry/tenant/schemas/",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												"tenant",
												"schemas",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 - Schema modify (enable for profile)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format \"Bearer {ACCESS_TOKEN}\"",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/meta:immutableTags\",\r\n        \"value\": [\r\n            \"union\"\r\n        ]\r\n    }\r\n]\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/schemaregistry/:CONTAINER_ID/schemas/:SCHEMA_ID_TO_PATCH",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"schemaregistry",
												":CONTAINER_ID",
												"schemas",
												":SCHEMA_ID_TO_PATCH"
											],
											"variable": [
												{
													"key": "CONTAINER_ID",
													"value": "tenant"
												},
												{
													"key": "SCHEMA_ID_TO_PATCH",
													"value": "{{CRM_EXTRA_CREDIT_SCHEMA_META_ALTID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3 - CRM Create dataset",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_EXTRA_CREDIT_DATASET_ID\", data[0].substring(11, data[0].length));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "accept-encoding",
												"value": "{{accept-encoding}}",
												"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"description\": \"{{lab_number}}: CRM Extra Credit\",\r\n    \"schemaRef\": {\r\n        \"id\": \"{{CRM_EXTRA_CREDIT_SCHEMA_ID}}\",\r\n        \"contentType\": \"application/vnd.adobe.xed+json;version=1\"\r\n    },\r\n    \"fileDescription\": {\r\n        \"persisted\": true,\r\n        \"containerFormat\": \"parquet\",\r\n        \"format\": \"parquet\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"catalog",
												"dataSets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4 - Dataset modify (enable for profile)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json-patch+json",
												"description": "this needs to be: application/json-patch+json NOT: application/json || https://jira.corp.adobe.com/browse/PLATIR-14798"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "- The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "- The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "- The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "- The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											},
											{
												"key": "accept-encoding",
												"value": "{{accept-encoding}}",
												"description": "- Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/tags/unifiedProfile\",\r\n        \"value\": [\r\n            \"enabled:true\"\r\n        ]\r\n    },\r\n     {\r\n        \"op\": \"add\",\r\n        \"path\": \"/tags/unifiedIdentity\",\r\n        \"value\": [\r\n            \"enabled:true\"\r\n        ]\r\n    }\r\n]"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/catalog/dataSets/:DATASET_ID",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"catalog",
												"dataSets",
												":DATASET_ID"
											],
											"variable": [
												{
													"key": "DATASET_ID",
													"value": "{{CRM_EXTRA_CREDIT_DATASET_ID}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Endpoint",
							"item": [
								{
									"name": "View Current Streaming Connections",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"HTTP_API_SPEC_ID\", data.items[0][\"id\"]);\r",
													"\r",
													"// think its this: ecadc60c-7455-4d87-84dc-2a0e293d997b  = data.items[1][\"id\"]\r",
													"\r",
													"// will try this: 4890fc95-5a1f-4983-94bb-e060c08e3f81  = data.items[0][\"id\"]\r",
													"\r",
													"// think this is broken above -- FYI -- maybe not\r",
													"\r",
													"\r",
													"// postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", data.items[1][\"id\"]);  <-- bad [1]"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connectionSpecs?property=name==\"Streaming Connection\"'",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connectionSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"Streaming Connection\"'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create s3 connection Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"HTTP_API_CONNECTOR_ID\", data[\"id\"]);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"CRM - Base connection to HTTP API\",\r\n    \"description\": \"CRM - connection to HTTP API\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n     },\r\n     \"auth\": {\r\n         \"specName\": \"Streaming Connection\",\r\n         \"params\": {\r\n             \"sourceId\": \"CRM Connection\",\r\n             \"dataType\": \"xdm\",\r\n             \"name\": \"CRM Connection\"\r\n         }\r\n     }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections"
											]
										}
									},
									"response": []
								},
								{
									"name": "CE HTTP API Create a new source connection Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var moddate = -1;",
													"var d = new Date();",
													"var mm = (d.getMonth() + 1 + moddate).toString().padStart(2, \"0\");",
													"var yyyy = d.getFullYear();",
													"",
													"postman.setEnvironmentVariable(\"AWS_MONTH\", mm);",
													"postman.setEnvironmentVariable(\"AWS_YEAR\", yyyy);",
													"",
													"/** pm.globals.set(\"AWS_MONTH\", mm); */",
													"/** pm.globals.set(\"AWS_YEAR\", yyyy); */",
													"",
													"/** postman.setEnvironmentVariable(\"TRAVEL_HOTEL_CRM_DATA_SOURCE_CONN_ID\", data[\"id\"]); */",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"FLOW_SOURCE_HTTP_API_SOURCE_CONN_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"HTTP API CRM source connection\",\r\n    \"description\": \"HTTP API CRM source connection\",\r\n    \"baseConnectionId\": \"{{HTTP_API_CONNECTOR_ID}}\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"bc7b00d6-623a-4dfc-9fdb-f1240aeadaeb\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "CRM HTTP API Create a new target connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"FLOW_SOURCE_HTTP_API_TARGET_CONN_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"HTTP API CRM target connection\",\r\n    \"description\": \"HTTP API CRM target connection description\",\r\n    \"connectionSpec\": {\r\n        \"id\": \"c604ff05-7f1a-43c0-8e18-33bf874cb11c\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"data\": {\r\n        \"format\": \"parquet_xdm\"\r\n    },\r\n    \"params\": {\r\n        \"dataSetId\": \"{{CRM_DATASET_ID}}\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										}
									},
									"response": []
								},
								{
									"name": "CRM HTTP API Create a new flow",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var ts = Math.round((new Date()).getTime() / 1000);",
													"pm.globals.set(\"ts\", ts);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"FLOW_SOURCE_HTTP_API_FLOW_ID\", data[\"id\"]);\r",
													"postman.setEnvironmentVariable(\"FLOW_SOURCE_HTTP_API_FLOW_ETAG\", data[\"etag\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"CRM Streaming flow\",\r\n    \"description\": \"CRM Streaming flow description\",\r\n    \"flowSpec\": {\r\n        \"id\": \"d8a6f005-7eaf-4153-983e-e8574508b877\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{FLOW_SOURCE_HTTP_API_SOURCE_CONN_ID}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{FLOW_SOURCE_HTTP_API_TARGET_CONN_ID}}\"\r\n    ]\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "6 - Source + Dataflow (s3 for CRM with Mapper)",
					"item": [
						{
							"name": "Source - s3",
							"item": [
								{
									"name": "Step 1 - View Current s3 Connections",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", 'ecadc60c-7455-4d87-84dc-2a0e293d997b');\r",
													"\r",
													"// postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", data.items[0][\"id\"]);  ecadc60c-7455-4d87-84dc-2a0e293d997b    <-- source\r",
													"// postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", data.items[1][\"id\"]);  4890fc95-5a1f-4983-94bb-e060c08e3f81    <-- destination\r",
													"\r",
													"var elementCount = data.items.length;\r",
													"for (var counter = 0; counter < elementCount; counter++) {\r",
													"    if (data.items[counter][\"attributes\"][\"isSource\"] == true ) {\r",
													"        postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", data.items[counter][\"id\"]);\r",
													"        console.log(pm.environment.get(\"AWS_S3_SPEC_ID\"));\r",
													"    };\r",
													"};"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connectionSpecs?property=name==\"amazon-s3\"'",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connectionSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"amazon-s3\"'"
												}
											]
										},
										"description": "## Call Objective:\n\n- Get a list of all the different \"amazon-s3\" connector spec IDs for later operations\n    \n\n## Lab Task:\n\n- Same call seen in (2.1 - Step 2)\n- This JS code, within Tests, is similar to the previous example\n- Instead of hard coding the spec IDs (which is an option), this will loop through and find the correct/matching spec ID as it relates to the s3 bucket being a (1) Source into AEP or (2) Destination.\n    \n\n## Tests Analysis:\n\n| **code blocks** | **comments** |\n| --- | --- |\n| `var data = JSON.parse(responseBody);` | takes the response Body and casts it into a JSON object which can be used to extract/loop through data |\n| `var elementCount = data.items.length;` | Getting the count of elements within \"items\" array in response (in other API calls, it could be \"results\" instead of items) |\n| `for (var counter = 0; counter < elementCount; counter++)` | This will loop through all items (individually) until it reaches the end of the count |\n| `if (data.items[counter][\"attributes\"][\"isSource\"] == true )` | This looks for a particular value in the item. In this case it's {\"attributes\":{\"isSource\": true}} |\n| `postman.setEnvironmentVariable(\"AWS_S3_SPEC_ID\", data.items[counter][\"id\"]);` | Like what was seen earlier, this sets the variable |\n| `console.log(pm.environment.get(\"AWS_S3_SPEC_ID\"));` | This prints the extracted value into the Postman console |\n\n## Scripting Notes:\n\n- Everything is in JS\n- Certain code/commands tie into Postman Runner (which we'll see very soon)\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/d3a3b3f6-0024-4b75-b7e5-64ea5a190a42/aW1hZ2UucG5n\" width=\"1023\" height=\"795\">\n\n## Response Analysis:\n\n| **variables** | **comments** |\n| --- | --- |\n| `id` | spec ID (needed for source + target connections) |\n| `name` | friendly name of the connection spec |\n| `authSpec` | specific settings on the connection |\n| `attributes` | attributes/metadata about the connection |\n\n## Key Takeaways:\n\n- This API shows the spec IDs along with the other parameters/settings needed for deploying connections (for both source and destination)\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Connection specs\n        - List connection specifications"
									},
									"response": []
								},
								{
									"name": "Step 2 - Create s3 connection CRM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"if (pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") > 0){",
													"    var count_is = true;",
													"} else if (pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") === 0){",
													"    pm.environment.unset(\"REPEAT_ACCOUNT_COUNT\");",
													"    postman.setNextRequest(null);",
													"} else {",
													"    pm.environment.set(\"REPEAT_ACCOUNT_COUNT\", 5);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Check Status', () => {\r",
													"if (pm.response.code === 201) {\r",
													"    var data = JSON.parse(responseBody);\r",
													"    pm.environment.set(\"AWS_S3_CONNECTOR_ID\", data[\"id\"]);\r",
													"    pm.environment.unset(\"REPEAT_ACCOUNT_COUNT\");\r",
													"} else {\r",
													"    if (pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") > 0) {\r",
													"        var newcount = pm.environment.get(\"REPEAT_ACCOUNT_COUNT\") - 1\r",
													"        console.log(newcount);\r",
													"        pm.environment.set(\"REPEAT_ACCOUNT_COUNT\", newcount);\r",
													"        setTimeout(function () { postman.setNextRequest(\"Step 2 - Create s3 connection CRM\") }, 45000);\r",
													"    }\r",
													"}});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"AWS S3 Storage Sccount - Summit - Mapper\",\r\n    \"description\": \"AWS S3 Storage Sccount - Summit - Mapper\",\r\n    \"auth\": {\r\n        \"specName\": \"Access Key\",\r\n        \"params\": {\r\n            \"s3AccessKey\": \"{{S3_ACCESS_KEY}}\",\r\n            \"s3SecretKey\": \"{{S3_SECRET_KEY}}\"\r\n        }\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{AWS_S3_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the credentials/account\n    \n\n## Lab Task:\n\n- This POST creates the initial account connection in Amazon s3 bucket\n- Notice that no storage locations/pathways are specified here, that happens later\n    \n\n## Body Example:\n\n<img src=\"https://content.pstmn.io/429a1e6b-ce0d-4107-935c-82fb0b794f3d/aW1hZ2UucG5n\" width=\"640\" height=\"398\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `s3AccessKey` | s3 bucket Access Key |\n| `s3SecretKey` | s3 bucket Secret Key |\n| `connectionSpec.id` | This specifies which connection is being used (obtained from last step) |\n| `name` | Name of the account connection (should be unique) |\n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/c9f0e652-e80b-4ef0-a9f6-10d58d66c63f/aW1hZ2UucG5n\" width=\"847\" height=\"282\">\n\n## Coding Loops:\n\n- Please notice the extra code happening within `Pre-request Script` and `Tests`\n- This is necessary in the event of Amazon (or whichever service for that matter) doesn't respond in time after a connection attempt occurs\n- Typically, loop coding is only needed in scenarios where other 3rd party services are called and might not respond in a timely manner\n    \n\n## Key Takeaways:\n\n- This creates a new connection\n- A single connection can control multiple dataflows (albeit from the same source)\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Connections\n        - Create a new connection\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 3 - Test the connectivity of an established connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"AWS_BASE_CONNECTOR_ID_SUCCESSFUL\", data[\"result\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/connections/:CONNECTION_ID/test",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"connections",
												":CONNECTION_ID",
												"test"
											],
											"variable": [
												{
													"key": "CONNECTION_ID",
													"value": "{{AWS_S3_CONNECTOR_ID}}"
												}
											]
										},
										"description": "## Call Objective:\n\n- Check if the last connection (that was created) is valid/working\n- This is not a requirement but good to have (in case the prior API call failed)\n    \n\n## Lab Task:\n\n- Confirm connection is working -- this is a status check really\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/29471b11-d39f-44fa-a9da-ab309251c1ce/aW1hZ2UucG5n\" alt=\"\" height=\"325\" width=\"1015\">\n\n## API Library Location:\n\n- Flow Service API\n    - Connections\n        - Test a connection's connectivity"
									},
									"response": []
								}
							]
						},
						{
							"name": "Landing - Cloud Storage into Platform",
							"item": [
								{
									"name": "Step 4 - Retrieve details of a flow spec for s3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"DATALAKE_CONNECTOR_SPEC_ID\", data.items[0][\"targetConnectionSpecIds\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flowSpecs?property=name==\"CRMToAEP\"",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flowSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"CRMToAEP\""
												}
											]
										},
										"description": "## Call Objective:\n\n- Gathers the target connection spec id for the data lake (where data will be landing within Platform)\n    \n\n## Lab Task:\n\n- No action needed\n- Instead of walking through multiple results iteratively (as was seen in the past), this code assumes that a single result will be rendered.\n- Search on: `?property=name==\"CRMToAEP\"`\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/ac77e03a-5557-482b-8b46-57fa393a724e/aW1hZ2UucG5n\" width=\"862\" height=\"429\">\n\n## API Library Location:\n\n- Flow Service API\n    - Flow specs\n        - List flow specifications\n\n## Documentation Links:\n\n[https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/database-nosql.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/database-nosql.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 5 - Retrieve details of a flow spec for Datalake",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CLOUD_STOR_FLOWSPEC_ID\", data.items[0][\"id\"]);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flowSpecs?property=name==\"CloudStorageToAEP\"",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flowSpecs"
											],
											"query": [
												{
													"key": "property",
													"value": "name==\"CloudStorageToAEP\""
												}
											]
										},
										"description": "## Call Objective:\n\n- Gathers the target connection spec id for the data lake (where data will be landing within Platform)\n    \n\n## Lab Task:\n\n- No action needed\n- Instead of walking through multiple results iteratively (as was seen in the past), this code assumes that a single result will be rendered.\n- Search on: `?property=name==\"CloudStorageToAEP\"`\n    \n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/34cd0570-6c28-49df-96a0-b30654919cc6/aW1hZ2UucG5n\" width=\"661\" height=\"559\">\n\n## API Library Location:\n\n- Flow Service API\n    - Flow specs\n        - List flow specifications\n\n## Documentation Links:\n\n[https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/cloud-storage.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/collect/cloud-storage.html?lang=en)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Connection - s3",
							"item": [
								{
									"name": "Step 6 - CRM S3 Create a new source connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"",
													"// getting the current year and month and casting it into my Environment file",
													"var moddate = -1;",
													"var d    = new Date();",
													"var mm   = (d.getMonth() + 1 + moddate).toString().padStart(2, \"0\");",
													"var yyyy = d.getFullYear();",
													"",
													"postman.setEnvironmentVariable(\"AWS_MONTH\", mm);",
													"postman.setEnvironmentVariable(\"AWS_YEAR\", yyyy);",
													"",
													"",
													"// setting the file location within the call itself",
													"postman.setEnvironmentVariable(\"SUMMIT_PATH_CRM_DATA_FILE_PATH_MAPPER\",      \"/summit2023lab/data_mapper/\");       // yes",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_DATA_SOURCE_CONN_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Source Connection for CRM data - {{AWS_YEAR}} - Mapper\",\r\n    \"baseConnectionId\": \"{{AWS_S3_CONNECTOR_ID}}\",\r\n    \"description\": \"Source Connection for CRM data - {{AWS_YEAR}} - Mapper\",\r\n    \"data\": {\r\n        \"format\": \"json\"\r\n    },\r\n    \"params\": {\r\n        \"path\": \"{{SUMMIT_PATH_CRM_DATA_FILE_PATH_MAPPER}}{{AWS_YEAR}}*.json\",\r\n        \"recursive\": \"true\"\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{AWS_S3_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/sourceConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"sourceConnections"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the source location (and data aspects)\n    \n\n## Lab Task:\n\n- No action needed\n    \n\n## Body Example:\n\n<img src=\"https://content.pstmn.io/e5cc79e5-67b9-40fe-a57b-c7e498c06081/aW1hZ2UucG5n\" width=\"1012\" height=\"506\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `baseConnectionId` | previous id from the source/account connection |\n| `data.format` | specifies the data formatting |\n| `params.path` | location of the data -- please note that in the API call you can use limited regex \"\\*\" pattern matching to collect more than a single file (UI does not support this) |\n| `params.recursive` | recursive look into the location |\n| `connectionSpec.id` | This is pointing to the AWS flow spec id |\n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/c26c5483-59bb-4697-a680-9959d618836a/aW1hZ2UucG5n\" width=\"932\" height=\"254\">\n\n## Key Takeaways:\n\n- This creates a new source information (for a dataflow)\n- Notice that RegEx is also being used\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Source connections\n        - Create a new source connection\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Step 7 - CRM S3 Create a new target connection",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_DATA_TARGET_CONN_ID\",  data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Target Connection for CRM data - {{AWS_YEAR}} - Mapper\",\r\n    \"description\": \"Target Connection for CRM data - {{AWS_YEAR}} - Mapper\",\r\n    \"data\": {\r\n        \"format\": \"parquet_xdm\",\r\n        \"schema\": {\r\n            \"id\": \"{{CRM_SCHEMA_ID}}\",\r\n            \"version\": \"application/vnd.adobe.xed-full+json;version=1.0\"\r\n        }\r\n    },\r\n    \"params\": {\r\n        \"dataSetId\": \"{{CRM_DATASET_ID}}\"\r\n    },\r\n    \"connectionSpec\": {\r\n        \"id\": \"{{DATALAKE_CONNECTOR_SPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/targetConnections",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"targetConnections"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the target location (schema + dataset)\n    \n\n## Lab Task:\n\n- Within your Collection variables, please add + save these IDs so Postman Runner uses them\n    \n\n## Body Example:\n\n<img src=\"https://content.pstmn.io/7674665e-7600-4a70-a7ce-bb4cc7aef755/aW1hZ2UucG5n\" alt=\"\" height=\"601\" width=\"977\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `data.format` | specifies the data formatting expected to land |\n| `data.schema.id` | schema ID (created prior) |\n| `params.dataSetId` | dataset ID (created prior) |\n| `connectionSpec.id` | datalake connector ID (from catalog, gathered earlier) |\n\n## Response Example:\n\n<img src=\"https://content.pstmn.io/0611db41-a262-4f15-9a3a-01f8b06154b5/aW1hZ2UucG5n\" alt=\"\" height=\"175\" width=\"767\">\n\n## Key Takeaways:\n\n- This creates a new source information (for a dataflow)\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Target connections\n        - Create a new target connection\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								},
								{
									"name": "Create a new mapping set Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"FEED_MAPPING_ID\",  data[\"id\"]);\r",
													"//setTimeout(() => {}, 15000);\r",
													"setTimeout(function(){}, 15000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token provided after authorization in the format �Bearer {ACCESS_TOKEN}�",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "Your specific API key for your unique Platform configuration ({API_KEY})",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "Unique Identifier for your IMS Organization ({IMS_ORG}).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"outputSchema\": {\r\n        \"schemaRef\": {\r\n            \"contentType\": \"application/vnd.adobe.xed-full+json;version=1\",\r\n            \"id\": \"https://ns.adobe.com/devbc/schemas/c0686dec1ec41693bfd307cf3de9083bf8fc46131559b513\"\r\n        }\r\n    },\r\n    \"mappings\": [\r\n        {\r\n            \"sourceType\": \"text/x.schema-path\",\r\n            \"source\": \"_id\",\r\n            \"destination\": \"_id\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.aep-xl\",\r\n            \"source\": \"now()\",\r\n            \"destination\": \"timestamp\"\r\n        },\r\n        {\r\n            \"sourceType\": \"text/x.aep-xl\",\r\n            \"source\": \"arrays_to_objects('name', explode('v1|v2|v3', '\\\\|'), 'value', to_array(true,iif(is_empty(event1),nullify(),to_integer(event1)),iif(is_empty(event2),nullify(),to_integer(event2)),iif(is_empty(event3),nullify(),to_integer(event3))))\",\r\n            \"destination\": \"_devbc.eventSubType[*]\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/conversion/mappingSets",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"conversion",
												"mappingSets"
											],
											"query": [
												{
													"key": "validate",
													"value": "{{validate}}",
													"disabled": true
												}
											]
										},
										"description": "Returns mapping set Id"
									},
									"response": []
								},
								{
									"name": "Step 8 - Create a new dataflow",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/** Begin Adobe-provided Pre-Request Scripts **/",
													"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
													"pm.request.headers.each(header => {",
													"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
													"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
													"    }",
													"});",
													"",
													"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
													"pm.request.url.query.remove(q => { ",
													"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
													"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
													"    } ",
													"});",
													"/** End Adobe-provided Pre-Request Scripts **/",
													"",
													"var ts = Math.round((new Date()).getTime() / 1000);",
													"pm.globals.set(\"ts\", ts);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"CRM_DATA_FLOW_ID\", data[\"id\"]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{ACCESS_TOKEN}}",
												"description": "The access token which can be copied from your Experience Platform integration, prefixed with 'Bearer '. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-api-key",
												"value": "{{API_KEY}}",
												"description": "The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-gw-ims-org-id",
												"value": "{{IMS_ORG}}",
												"description": "The organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
												"type": "string"
											},
											{
												"key": "x-sandbox-name",
												"value": "{{SANDBOX_NAME}}",
												"description": "All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.",
												"type": "string"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Dataflow for CRM Data via AWS S3 - {{AWS_YEAR}} - Mapper\",\r\n    \"description\": \"Dataflow for CRM Data via AWS S3 - {{AWS_YEAR}} - Mapper\",\r\n    \"flowSpec\": {\r\n        \"id\": \"{{CLOUD_STOR_FLOWSPEC_ID}}\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"sourceConnectionIds\": [\r\n        \"{{CRM_DATA_SOURCE_CONN_ID}}\"\r\n    ],\r\n    \"targetConnectionIds\": [\r\n        \"{{CRM_DATA_TARGET_CONN_ID}}\"\r\n    ],\r\n    \"transformations\": [],\r\n    \"scheduleParams\": {\r\n        \"startTime\": \"{{ts}}\",\r\n        \"frequency\": \"minute\",\r\n        \"interval\": \"15\"\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "https://platform.adobe.io/data/foundation/flowservice/flows",
											"protocol": "https",
											"host": [
												"platform",
												"adobe",
												"io"
											],
											"path": [
												"data",
												"foundation",
												"flowservice",
												"flows"
											]
										},
										"description": "## Call Objective:\n\n- The BODY is the details of the dataflow (source + target combination -- the execution of the feed)\n- This is the final step that completes the feed\n    \n\n## Lab Task:\n\n- No action is needed\n    \n\n## Body Example:\n\n<img src=\"https://content.pstmn.io/052b3ccf-6dba-4f56-b205-30b39b5a4fdf/aW1hZ2UucG5n\" width=\"775\" height=\"579\">\n\n## Body Analysis:\n\n| **key vars** | **comments** |\n| --- | --- |\n| `flowSpec.id` | forgot where this thing lives |\n| `sourceConnectionIds` | source connection ID (created prior) |\n| `targetConnectionIds` | target connection ID (created prior) |\n| `transformations` | in this example, nothing is used since data is already in XDM-compliant JSON format. Within the extra credit section, we'll use Mapper (data prep) to transform data into the schema/dataset format |\n| `scheduleParams` | settings for how often data will be pulled (on poll). Please note that typically the \"smallest\" interval of time is 15 mins. `{{ts}}` is current UNIX TIME calculated. |\n\n## Response Analysis:\n\n<img src=\"https://content.pstmn.io/9c057953-0dc5-48a6-be1d-29342a2f1eb1/aW1hZ2UucG5n\" width=\"806\" height=\"183\">\n\n## Key Takeaways:\n\n- This creates a new a new dataflow -- tying together all the prior steps\n    \n\n## API Library Location:\n\n- Flow Service API\n    - Flows\n        - Create a flow\n\n## Documentation Links:\n\n- [https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en](https://experienceleague.adobe.com/docs/experience-platform/sources/api-tutorials/create/cloud-storage/s3.html?lang=en)"
									},
									"response": []
								}
							]
						}
					],
					"description": "<img src=\"https://content.pstmn.io/5d8d7e35-973f-4390-8fa4-9660362a88da/aW1hZ2UucG5n\" width=\"1279\" height=\"606\">\n\n## Call Sequence:\n\n<img src=\"https://content.pstmn.io/e02fde1f-cb66-4a4b-97bc-bc5be5a03297/aW1hZ2UucG5n\" width=\"800\" height=\"450\">"
				},
				{
					"name": "7 - Token Creation Steps",
					"item": [
						{
							"name": "INIT: Load Crypto Library for RS256",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setGlobalVariable(\"jsrsasign_js\", responseBody);",
											"tests[\"Javascript JSR Assign Library load complete\"] = true; "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
									"protocol": "https",
									"host": [
										"kjur",
										"github",
										"io"
									],
									"path": [
										"jsrsasign",
										"jsrsasign-latest-all-min.js"
									]
								},
								"description": "Load the RSA-Sign Crypto Library in a global environment variable\n\nSource: http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\n\nGithub: https://github.com/kjur/jsrsasign"
							},
							"response": []
						},
						{
							"name": "IMS: JWT Generate + Auth via User Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"",
											"if (data.access_token) {",
											"    postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);",
											"} else {",
											"    console.log(\"Unable to acquire ACCESS_TOKEN from Adobe IMS to make further calls to Adobe I/O APIs.\")",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Tips from: https://github.com/kjur/jsrsasign/issues/199",
											"// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
											"",
											"var navigator = {}; //fake a navigator object for the lib",
											"var window = {}; //fake a window object for the lib",
											"eval(postman.getGlobalVariable(\"jsrsasign_js\")); //import javascript jsrsasign",
											"",
											"",
											"var header = {",
											"\t\"alg\": \"RS256\"",
											"};",
											"",
											"var data = {",
											"\t\"exp\": Math.round(87000 + Date.now()/1000),",
											"\t\"iss\": postman.getEnvironmentVariable(\"IMS_ORG\"),",
											"\t\"sub\": postman.getEnvironmentVariable(\"TECHNICAL_ACCOUNT_ID\"),",
											"\t\"aud\": \"https://\" + postman.getEnvironmentVariable(\"IMS\")+\"/c/\"+postman.getEnvironmentVariable(\"API_KEY\")",
											"};",
											"",
											"meta_scopes = postman.getEnvironmentVariable(\"META_SCOPE\");",
											"meta_scopes.forEach(function(scope){",
											"    var meta_scope = \"https://\" + postman.getEnvironmentVariable(\"IMS\")+\"/s/\"+",
											"                     scope;",
											"    data[meta_scope] = true;",
											"});",
											"",
											"var secret = postman.getEnvironmentVariable(\"PRIVATE_KEY\");",
											"",
											"if (!secret) {",
											"    console.log(\"Ensure the Private Key is added to both INITIAL and CURRENT VALUES in the active Postman environment's PRIVATE_KEY variable.\");",
											"}",
											"",
											"console.log(data);",
											"",
											"var sHeader = JSON.stringify(header);",
											"var sPayload = JSON.stringify(data);",
											"var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
											"",
											"console.log(sJWT);",
											"",
											"postman.setEnvironmentVariable(\"JWT_TOKEN\", sJWT);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "client_id",
											"value": "{{API_KEY}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{CLIENT_SECRET}}",
											"type": "text"
										},
										{
											"key": "jwt_token",
											"value": "{{JWT_TOKEN}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://{{IMS}}/ims/exchange/jwt/",
									"protocol": "https",
									"host": [
										"{{IMS}}"
									],
									"path": [
										"ims",
										"exchange",
										"jwt",
										""
									]
								},
								"description": "Generate a JWT token using the Crypto RS256\nSend to IMS for access_token"
							},
							"response": []
						},
						{
							"name": "Retrieve a sandbox by name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/** Begin Adobe-provided Pre-Request Scripts **/",
											"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
											"pm.request.headers.each(header => {",
											"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
											"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
											"    }",
											"});",
											"",
											"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
											"pm.request.url.query.remove(q => { ",
											"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
											"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
											"    } ",
											"});",
											"/** End Adobe-provided Pre-Request Scripts **/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{ACCESS_TOKEN}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-api-key",
										"value": "{{API_KEY}}",
										"description": "The API key which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-gw-ims-org-id",
										"value": "{{IMS_ORG}}",
										"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer\". For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).",
										"type": "string"
									},
									{
										"key": "x-sandbox-name",
										"value": "{{SANDBOX_NAME}}",
										"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.",
										"type": "string"
									},
									{
										"key": "x-user-token",
										"value": "{{x-user-token}}",
										"description": "The access token for the current user. If present, this token is instead of the token in the Authorization header to lookup sandboxes.",
										"type": "string"
									}
								],
								"url": {
									"raw": "https://platform.adobe.io/data/foundation/sandbox-management/sandboxes/:sandboxName",
									"protocol": "https",
									"host": [
										"platform",
										"adobe",
										"io"
									],
									"path": [
										"data",
										"foundation",
										"sandbox-management",
										"sandboxes",
										":sandboxName"
									],
									"variable": [
										{
											"key": "sandboxName",
											"value": "{{SANDBOX_NAME}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "This API call genereated the signed JWT Token locally and the Private Key does not leave this machine, however this set of API calls does load the JSR Assign Crypto library from a non-Adone end-point (https://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js), therefore it not recommended for use with Production credentials.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// getting the current YYYY-MM-DD and casting it into my Environment file",
					"var moment     = require('moment');",
					"var fullDate   = moment().format((\"(YYYY-MM-DD)\"));",
					"var labPrefix  = pm.collectionVariables.get(\"lab_number_val\") + \" \" + fullDate;",
					"pm.collectionVariables.set(\"lab_number\", labPrefix);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "lab_number_val",
			"value": "Lab 03",
			"type": "string"
		},
		{
			"key": "lab_number",
			"value": "Lab 03",
			"type": "string"
		}
	]
}